{
	"id": "6cc4b41c40dcad14888c604e28cb95f9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/SimpleDex.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\ncontract SimpleDEX {\r\n    address public tokenAddress;\r\n    address public usdtAddress;\r\n    address public usdcAddress;\r\n\r\n    constructor(address _tokenAddress, address _usdtAddress, address _usdcAddress) {\r\n        tokenAddress = _tokenAddress;\r\n        usdtAddress = _usdtAddress;\r\n        usdcAddress = _usdcAddress;\r\n    }\r\n\r\n    function tradeUSDT(uint256 amount) external {\r\n        IERC20(usdtAddress).transferFrom(msg.sender, address(this), amount);\r\n        IERC20(tokenAddress).transfer(msg.sender, amount);\r\n    }\r\n\r\n    function tradeUSDC(uint256 amount) external {\r\n        IERC20(usdcAddress).transferFrom(msg.sender, address(this), amount);\r\n        IERC20(tokenAddress).transfer(msg.sender, amount);\r\n    }\r\n\r\n    function withdrawTokens(address token, uint256 amount) external {\r\n        require(msg.sender == tokenAddress, \"Only the token contract can withdraw tokens\");\r\n        IERC20(token).transfer(msg.sender, amount);\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SimpleDex.sol": {
				"SimpleDEX": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_usdtAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_usdcAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "tokenAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "tradeUSDC",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "tradeUSDT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usdcAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usdtAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SimpleDex.sol\":120:1073  contract SimpleDEX {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/SimpleDex.sol\":248:448  constructor(address _tokenAddress, address _usdtAddress, address _usdcAddress) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/SimpleDex.sol\":353:366  _tokenAddress */\n  dup3\n    /* \"contracts/SimpleDex.sol\":338:350  tokenAddress */\n  0x00\n  dup1\n    /* \"contracts/SimpleDex.sol\":338:366  tokenAddress = _tokenAddress */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/SimpleDex.sol\":391:403  _usdtAddress */\n  dup2\n    /* \"contracts/SimpleDex.sol\":377:388  usdtAddress */\n  0x01\n  0x00\n    /* \"contracts/SimpleDex.sol\":377:403  usdtAddress = _usdtAddress */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/SimpleDex.sol\":428:440  _usdcAddress */\n  dup1\n    /* \"contracts/SimpleDex.sol\":414:425  usdcAddress */\n  0x02\n  0x00\n    /* \"contracts/SimpleDex.sol\":414:440  usdcAddress = _usdcAddress */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/SimpleDex.sol\":248:448  constructor(address _tokenAddress, address _usdtAddress, address _usdcAddress) {... */\n  pop\n  pop\n  pop\n    /* \"contracts/SimpleDex.sol\":120:1073  contract SimpleDEX {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1508   */\ntag_3:\n    /* \"#utility.yul\":933:939   */\n  0x00\n    /* \"#utility.yul\":941:947   */\n  dup1\n    /* \"#utility.yul\":949:955   */\n  0x00\n    /* \"#utility.yul\":998:1000   */\n  0x60\n    /* \"#utility.yul\":986:995   */\n  dup5\n    /* \"#utility.yul\":977:984   */\n  dup7\n    /* \"#utility.yul\":973:996   */\n  sub\n    /* \"#utility.yul\":969:1001   */\n  slt\n    /* \"#utility.yul\":966:1085   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":1004:1083   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":966:1085   */\ntag_27:\n    /* \"#utility.yul\":1124:1125   */\n  0x00\n    /* \"#utility.yul\":1149:1213   */\n  tag_29\n    /* \"#utility.yul\":1205:1212   */\n  dup7\n    /* \"#utility.yul\":1196:1202   */\n  dup3\n    /* \"#utility.yul\":1185:1194   */\n  dup8\n    /* \"#utility.yul\":1181:1203   */\n  add\n    /* \"#utility.yul\":1149:1213   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1139:1213   */\n  swap4\n  pop\n    /* \"#utility.yul\":1095:1223   */\n  pop\n    /* \"#utility.yul\":1262:1264   */\n  0x20\n    /* \"#utility.yul\":1288:1352   */\n  tag_30\n    /* \"#utility.yul\":1344:1351   */\n  dup7\n    /* \"#utility.yul\":1335:1341   */\n  dup3\n    /* \"#utility.yul\":1324:1333   */\n  dup8\n    /* \"#utility.yul\":1320:1342   */\n  add\n    /* \"#utility.yul\":1288:1352   */\n  tag_13\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":1278:1352   */\n  swap3\n  pop\n    /* \"#utility.yul\":1233:1362   */\n  pop\n    /* \"#utility.yul\":1401:1403   */\n  0x40\n    /* \"#utility.yul\":1427:1491   */\n  tag_31\n    /* \"#utility.yul\":1483:1490   */\n  dup7\n    /* \"#utility.yul\":1474:1480   */\n  dup3\n    /* \"#utility.yul\":1463:1472   */\n  dup8\n    /* \"#utility.yul\":1459:1481   */\n  add\n    /* \"#utility.yul\":1427:1491   */\n  tag_13\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1417:1491   */\n  swap2\n  pop\n    /* \"#utility.yul\":1372:1501   */\n  pop\n    /* \"#utility.yul\":845:1508   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"contracts/SimpleDex.sol\":120:1073  contract SimpleDEX {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SimpleDex.sol\":120:1073  contract SimpleDEX {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x02d45457\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06b091f9\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x9ab4a445\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x9d76ea58\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xc641b4ce\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xfc4751d7\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/SimpleDex.sol\":213:239  address public usdcAddress */\n    tag_3:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleDex.sol\":852:1070  function withdrawTokens(address token, uint256 amount) external {... */\n    tag_4:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      tag_16\n      jump\t// in\n    tag_13:\n      stop\n        /* \"contracts/SimpleDex.sol\":180:206  address public usdtAddress */\n    tag_5:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleDex.sol\":146:173  address public tokenAddress */\n    tag_6:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleDex.sol\":654:844  function tradeUSDC(uint256 amount) external {... */\n    tag_7:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      stop\n        /* \"contracts/SimpleDex.sol\":456:646  function tradeUSDT(uint256 amount) external {... */\n    tag_8:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_28:\n      tag_29\n      jump\t// in\n    tag_27:\n      stop\n        /* \"contracts/SimpleDex.sol\":213:239  address public usdcAddress */\n    tag_10:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/SimpleDex.sol\":852:1070  function withdrawTokens(address token, uint256 amount) external {... */\n    tag_16:\n        /* \"contracts/SimpleDex.sol\":949:961  tokenAddress */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SimpleDex.sol\":935:961  msg.sender == tokenAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SimpleDex.sol\":935:945  msg.sender */\n      caller\n        /* \"contracts/SimpleDex.sol\":935:961  msg.sender == tokenAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/SimpleDex.sol\":927:1009  require(msg.sender == tokenAddress, \"Only the token contract can withdraw tokens\") */\n      tag_31\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_32\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_31:\n        /* \"contracts/SimpleDex.sol\":1027:1032  token */\n      dup2\n        /* \"contracts/SimpleDex.sol\":1020:1042  IERC20(token).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/SimpleDex.sol\":1043:1053  msg.sender */\n      caller\n        /* \"contracts/SimpleDex.sol\":1055:1061  amount */\n      dup4\n        /* \"contracts/SimpleDex.sol\":1020:1062  IERC20(token).transfer(msg.sender, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_34\n      swap3\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_37\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_37:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      pop\n        /* \"contracts/SimpleDex.sol\":852:1070  function withdrawTokens(address token, uint256 amount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SimpleDex.sol\":180:206  address public usdtAddress */\n    tag_18:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/SimpleDex.sol\":146:173  address public tokenAddress */\n    tag_21:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/SimpleDex.sol\":654:844  function tradeUSDC(uint256 amount) external {... */\n    tag_26:\n        /* \"contracts/SimpleDex.sol\":716:727  usdcAddress */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SimpleDex.sol\":709:741  IERC20(usdcAddress).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/SimpleDex.sol\":742:752  msg.sender */\n      caller\n        /* \"contracts/SimpleDex.sol\":762:766  this */\n      address\n        /* \"contracts/SimpleDex.sol\":769:775  amount */\n      dup5\n        /* \"contracts/SimpleDex.sol\":709:776  IERC20(usdcAddress).transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_41\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_44\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_44:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_45:\n      pop\n        /* \"contracts/SimpleDex.sol\":794:806  tokenAddress */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SimpleDex.sol\":787:816  IERC20(tokenAddress).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/SimpleDex.sol\":817:827  msg.sender */\n      caller\n        /* \"contracts/SimpleDex.sol\":829:835  amount */\n      dup4\n        /* \"contracts/SimpleDex.sol\":787:836  IERC20(tokenAddress).transfer(msg.sender, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_46\n      swap3\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_46:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_48\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_48:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_49:\n      pop\n        /* \"contracts/SimpleDex.sol\":654:844  function tradeUSDC(uint256 amount) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/SimpleDex.sol\":456:646  function tradeUSDT(uint256 amount) external {... */\n    tag_29:\n        /* \"contracts/SimpleDex.sol\":518:529  usdtAddress */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SimpleDex.sol\":511:543  IERC20(usdtAddress).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/SimpleDex.sol\":544:554  msg.sender */\n      caller\n        /* \"contracts/SimpleDex.sol\":564:568  this */\n      address\n        /* \"contracts/SimpleDex.sol\":571:577  amount */\n      dup5\n        /* \"contracts/SimpleDex.sol\":511:578  IERC20(usdtAddress).transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_51\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_51:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_53\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_53:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_54:\n      pop\n        /* \"contracts/SimpleDex.sol\":596:608  tokenAddress */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SimpleDex.sol\":589:618  IERC20(tokenAddress).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/SimpleDex.sol\":619:629  msg.sender */\n      caller\n        /* \"contracts/SimpleDex.sol\":631:637  amount */\n      dup4\n        /* \"contracts/SimpleDex.sol\":589:638  IERC20(tokenAddress).transfer(msg.sender, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap3\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_55:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_57\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_57:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_58:\n      pop\n        /* \"contracts/SimpleDex.sol\":456:646  function tradeUSDT(uint256 amount) external {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_59:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_60:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_80\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_59\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_61:\n        /* \"#utility.yul\":328:352   */\n      tag_82\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_60\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_12:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_84\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_61\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":674:791   */\n    tag_63:\n        /* \"#utility.yul\":783:784   */\n      0x00\n        /* \"#utility.yul\":780:781   */\n      dup1\n        /* \"#utility.yul\":773:785   */\n      revert\n        /* \"#utility.yul\":920:1042   */\n    tag_65:\n        /* \"#utility.yul\":993:1017   */\n      tag_89\n        /* \"#utility.yul\":1011:1016   */\n      dup2\n        /* \"#utility.yul\":993:1017   */\n      tag_60\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":986:991   */\n      dup2\n        /* \"#utility.yul\":983:1018   */\n      eq\n        /* \"#utility.yul\":973:1036   */\n      tag_90\n      jumpi\n        /* \"#utility.yul\":1032:1033   */\n      0x00\n        /* \"#utility.yul\":1029:1030   */\n      dup1\n        /* \"#utility.yul\":1022:1034   */\n      revert\n        /* \"#utility.yul\":973:1036   */\n    tag_90:\n        /* \"#utility.yul\":920:1042   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1048:1187   */\n    tag_66:\n        /* \"#utility.yul\":1094:1099   */\n      0x00\n        /* \"#utility.yul\":1132:1138   */\n      dup2\n        /* \"#utility.yul\":1119:1139   */\n      calldataload\n        /* \"#utility.yul\":1110:1139   */\n      swap1\n      pop\n        /* \"#utility.yul\":1148:1181   */\n      tag_92\n        /* \"#utility.yul\":1175:1180   */\n      dup2\n        /* \"#utility.yul\":1148:1181   */\n      tag_65\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":1048:1187   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1193:1270   */\n    tag_67:\n        /* \"#utility.yul\":1230:1237   */\n      0x00\n        /* \"#utility.yul\":1259:1264   */\n      dup2\n        /* \"#utility.yul\":1248:1264   */\n      swap1\n      pop\n        /* \"#utility.yul\":1193:1270   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1276:1398   */\n    tag_68:\n        /* \"#utility.yul\":1349:1373   */\n      tag_95\n        /* \"#utility.yul\":1367:1372   */\n      dup2\n        /* \"#utility.yul\":1349:1373   */\n      tag_67\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":1342:1347   */\n      dup2\n        /* \"#utility.yul\":1339:1374   */\n      eq\n        /* \"#utility.yul\":1329:1392   */\n      tag_96\n      jumpi\n        /* \"#utility.yul\":1388:1389   */\n      0x00\n        /* \"#utility.yul\":1385:1386   */\n      dup1\n        /* \"#utility.yul\":1378:1390   */\n      revert\n        /* \"#utility.yul\":1329:1392   */\n    tag_96:\n        /* \"#utility.yul\":1276:1398   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1404:1543   */\n    tag_69:\n        /* \"#utility.yul\":1450:1455   */\n      0x00\n        /* \"#utility.yul\":1488:1494   */\n      dup2\n        /* \"#utility.yul\":1475:1495   */\n      calldataload\n        /* \"#utility.yul\":1466:1495   */\n      swap1\n      pop\n        /* \"#utility.yul\":1504:1537   */\n      tag_98\n        /* \"#utility.yul\":1531:1536   */\n      dup2\n        /* \"#utility.yul\":1504:1537   */\n      tag_68\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":1404:1543   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1549:2023   */\n    tag_15:\n        /* \"#utility.yul\":1617:1623   */\n      0x00\n        /* \"#utility.yul\":1625:1631   */\n      dup1\n        /* \"#utility.yul\":1674:1676   */\n      0x40\n        /* \"#utility.yul\":1662:1671   */\n      dup4\n        /* \"#utility.yul\":1653:1660   */\n      dup6\n        /* \"#utility.yul\":1649:1672   */\n      sub\n        /* \"#utility.yul\":1645:1677   */\n      slt\n        /* \"#utility.yul\":1642:1761   */\n      iszero\n      tag_100\n      jumpi\n        /* \"#utility.yul\":1680:1759   */\n      tag_101\n      tag_63\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":1642:1761   */\n    tag_100:\n        /* \"#utility.yul\":1800:1801   */\n      0x00\n        /* \"#utility.yul\":1825:1878   */\n      tag_102\n        /* \"#utility.yul\":1870:1877   */\n      dup6\n        /* \"#utility.yul\":1861:1867   */\n      dup3\n        /* \"#utility.yul\":1850:1859   */\n      dup7\n        /* \"#utility.yul\":1846:1868   */\n      add\n        /* \"#utility.yul\":1825:1878   */\n      tag_66\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":1815:1878   */\n      swap3\n      pop\n        /* \"#utility.yul\":1771:1888   */\n      pop\n        /* \"#utility.yul\":1927:1929   */\n      0x20\n        /* \"#utility.yul\":1953:2006   */\n      tag_103\n        /* \"#utility.yul\":1998:2005   */\n      dup6\n        /* \"#utility.yul\":1989:1995   */\n      dup3\n        /* \"#utility.yul\":1978:1987   */\n      dup7\n        /* \"#utility.yul\":1974:1996   */\n      add\n        /* \"#utility.yul\":1953:2006   */\n      tag_69\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":1943:2006   */\n      swap2\n      pop\n        /* \"#utility.yul\":1898:2016   */\n      pop\n        /* \"#utility.yul\":1549:2023   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2029:2358   */\n    tag_25:\n        /* \"#utility.yul\":2088:2094   */\n      0x00\n        /* \"#utility.yul\":2137:2139   */\n      0x20\n        /* \"#utility.yul\":2125:2134   */\n      dup3\n        /* \"#utility.yul\":2116:2123   */\n      dup5\n        /* \"#utility.yul\":2112:2135   */\n      sub\n        /* \"#utility.yul\":2108:2140   */\n      slt\n        /* \"#utility.yul\":2105:2224   */\n      iszero\n      tag_105\n      jumpi\n        /* \"#utility.yul\":2143:2222   */\n      tag_106\n      tag_63\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":2105:2224   */\n    tag_105:\n        /* \"#utility.yul\":2263:2264   */\n      0x00\n        /* \"#utility.yul\":2288:2341   */\n      tag_107\n        /* \"#utility.yul\":2333:2340   */\n      dup5\n        /* \"#utility.yul\":2324:2330   */\n      dup3\n        /* \"#utility.yul\":2313:2322   */\n      dup6\n        /* \"#utility.yul\":2309:2331   */\n      add\n        /* \"#utility.yul\":2288:2341   */\n      tag_69\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":2278:2341   */\n      swap2\n      pop\n        /* \"#utility.yul\":2234:2351   */\n      pop\n        /* \"#utility.yul\":2029:2358   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2364:2533   */\n    tag_70:\n        /* \"#utility.yul\":2448:2459   */\n      0x00\n        /* \"#utility.yul\":2482:2488   */\n      dup3\n        /* \"#utility.yul\":2477:2480   */\n      dup3\n        /* \"#utility.yul\":2470:2489   */\n      mstore\n        /* \"#utility.yul\":2522:2526   */\n      0x20\n        /* \"#utility.yul\":2517:2520   */\n      dup3\n        /* \"#utility.yul\":2513:2527   */\n      add\n        /* \"#utility.yul\":2498:2527   */\n      swap1\n      pop\n        /* \"#utility.yul\":2364:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:2769   */\n    tag_71:\n        /* \"#utility.yul\":2679:2713   */\n      0x4f6e6c792074686520746f6b656e20636f6e74726163742063616e2077697468\n        /* \"#utility.yul\":2675:2676   */\n      0x00\n        /* \"#utility.yul\":2667:2673   */\n      dup3\n        /* \"#utility.yul\":2663:2677   */\n      add\n        /* \"#utility.yul\":2656:2714   */\n      mstore\n        /* \"#utility.yul\":2748:2761   */\n      0x6472617720746f6b656e73000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2743:2745   */\n      0x20\n        /* \"#utility.yul\":2735:2741   */\n      dup3\n        /* \"#utility.yul\":2731:2746   */\n      add\n        /* \"#utility.yul\":2724:2762   */\n      mstore\n        /* \"#utility.yul\":2539:2769   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2775:3141   */\n    tag_72:\n        /* \"#utility.yul\":2917:2920   */\n      0x00\n        /* \"#utility.yul\":2938:3005   */\n      tag_111\n        /* \"#utility.yul\":3002:3004   */\n      0x2b\n        /* \"#utility.yul\":2997:3000   */\n      dup4\n        /* \"#utility.yul\":2938:3005   */\n      tag_70\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":2931:3005   */\n      swap2\n      pop\n        /* \"#utility.yul\":3014:3107   */\n      tag_112\n        /* \"#utility.yul\":3103:3106   */\n      dup3\n        /* \"#utility.yul\":3014:3107   */\n      tag_71\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":3132:3134   */\n      0x40\n        /* \"#utility.yul\":3127:3130   */\n      dup3\n        /* \"#utility.yul\":3123:3135   */\n      add\n        /* \"#utility.yul\":3116:3135   */\n      swap1\n      pop\n        /* \"#utility.yul\":2775:3141   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3147:3566   */\n    tag_33:\n        /* \"#utility.yul\":3313:3317   */\n      0x00\n        /* \"#utility.yul\":3351:3353   */\n      0x20\n        /* \"#utility.yul\":3340:3349   */\n      dup3\n        /* \"#utility.yul\":3336:3354   */\n      add\n        /* \"#utility.yul\":3328:3354   */\n      swap1\n      pop\n        /* \"#utility.yul\":3400:3409   */\n      dup2\n        /* \"#utility.yul\":3394:3398   */\n      dup2\n        /* \"#utility.yul\":3390:3410   */\n      sub\n        /* \"#utility.yul\":3386:3387   */\n      0x00\n        /* \"#utility.yul\":3375:3384   */\n      dup4\n        /* \"#utility.yul\":3371:3388   */\n      add\n        /* \"#utility.yul\":3364:3411   */\n      mstore\n        /* \"#utility.yul\":3428:3559   */\n      tag_114\n        /* \"#utility.yul\":3554:3558   */\n      dup2\n        /* \"#utility.yul\":3428:3559   */\n      tag_72\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":3420:3559   */\n      swap1\n      pop\n        /* \"#utility.yul\":3147:3566   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3572:3690   */\n    tag_73:\n        /* \"#utility.yul\":3659:3683   */\n      tag_116\n        /* \"#utility.yul\":3677:3682   */\n      dup2\n        /* \"#utility.yul\":3659:3683   */\n      tag_67\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":3654:3657   */\n      dup3\n        /* \"#utility.yul\":3647:3684   */\n      mstore\n        /* \"#utility.yul\":3572:3690   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3696:4028   */\n    tag_35:\n        /* \"#utility.yul\":3817:3821   */\n      0x00\n        /* \"#utility.yul\":3855:3857   */\n      0x40\n        /* \"#utility.yul\":3844:3853   */\n      dup3\n        /* \"#utility.yul\":3840:3858   */\n      add\n        /* \"#utility.yul\":3832:3858   */\n      swap1\n      pop\n        /* \"#utility.yul\":3868:3939   */\n      tag_118\n        /* \"#utility.yul\":3936:3937   */\n      0x00\n        /* \"#utility.yul\":3925:3934   */\n      dup4\n        /* \"#utility.yul\":3921:3938   */\n      add\n        /* \"#utility.yul\":3912:3918   */\n      dup6\n        /* \"#utility.yul\":3868:3939   */\n      tag_61\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":3949:4021   */\n      tag_119\n        /* \"#utility.yul\":4017:4019   */\n      0x20\n        /* \"#utility.yul\":4006:4015   */\n      dup4\n        /* \"#utility.yul\":4002:4020   */\n      add\n        /* \"#utility.yul\":3993:3999   */\n      dup5\n        /* \"#utility.yul\":3949:4021   */\n      tag_73\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":3696:4028   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4034:4124   */\n    tag_74:\n        /* \"#utility.yul\":4068:4075   */\n      0x00\n        /* \"#utility.yul\":4111:4116   */\n      dup2\n        /* \"#utility.yul\":4104:4117   */\n      iszero\n        /* \"#utility.yul\":4097:4118   */\n      iszero\n        /* \"#utility.yul\":4086:4118   */\n      swap1\n      pop\n        /* \"#utility.yul\":4034:4124   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4130:4246   */\n    tag_75:\n        /* \"#utility.yul\":4200:4221   */\n      tag_122\n        /* \"#utility.yul\":4215:4220   */\n      dup2\n        /* \"#utility.yul\":4200:4221   */\n      tag_74\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":4193:4198   */\n      dup2\n        /* \"#utility.yul\":4190:4222   */\n      eq\n        /* \"#utility.yul\":4180:4240   */\n      tag_123\n      jumpi\n        /* \"#utility.yul\":4236:4237   */\n      0x00\n        /* \"#utility.yul\":4233:4234   */\n      dup1\n        /* \"#utility.yul\":4226:4238   */\n      revert\n        /* \"#utility.yul\":4180:4240   */\n    tag_123:\n        /* \"#utility.yul\":4130:4246   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4252:4389   */\n    tag_76:\n        /* \"#utility.yul\":4306:4311   */\n      0x00\n        /* \"#utility.yul\":4337:4343   */\n      dup2\n        /* \"#utility.yul\":4331:4344   */\n      mload\n        /* \"#utility.yul\":4322:4344   */\n      swap1\n      pop\n        /* \"#utility.yul\":4353:4383   */\n      tag_125\n        /* \"#utility.yul\":4377:4382   */\n      dup2\n        /* \"#utility.yul\":4353:4383   */\n      tag_75\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":4252:4389   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4395:4740   */\n    tag_39:\n        /* \"#utility.yul\":4462:4468   */\n      0x00\n        /* \"#utility.yul\":4511:4513   */\n      0x20\n        /* \"#utility.yul\":4499:4508   */\n      dup3\n        /* \"#utility.yul\":4490:4497   */\n      dup5\n        /* \"#utility.yul\":4486:4509   */\n      sub\n        /* \"#utility.yul\":4482:4514   */\n      slt\n        /* \"#utility.yul\":4479:4598   */\n      iszero\n      tag_127\n      jumpi\n        /* \"#utility.yul\":4517:4596   */\n      tag_128\n      tag_63\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":4479:4598   */\n    tag_127:\n        /* \"#utility.yul\":4637:4638   */\n      0x00\n        /* \"#utility.yul\":4662:4723   */\n      tag_129\n        /* \"#utility.yul\":4715:4722   */\n      dup5\n        /* \"#utility.yul\":4706:4712   */\n      dup3\n        /* \"#utility.yul\":4695:4704   */\n      dup6\n        /* \"#utility.yul\":4691:4713   */\n      add\n        /* \"#utility.yul\":4662:4723   */\n      tag_76\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":4652:4723   */\n      swap2\n      pop\n        /* \"#utility.yul\":4608:4733   */\n      pop\n        /* \"#utility.yul\":4395:4740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4746:5188   */\n    tag_42:\n        /* \"#utility.yul\":4895:4899   */\n      0x00\n        /* \"#utility.yul\":4933:4935   */\n      0x60\n        /* \"#utility.yul\":4922:4931   */\n      dup3\n        /* \"#utility.yul\":4918:4936   */\n      add\n        /* \"#utility.yul\":4910:4936   */\n      swap1\n      pop\n        /* \"#utility.yul\":4946:5017   */\n      tag_131\n        /* \"#utility.yul\":5014:5015   */\n      0x00\n        /* \"#utility.yul\":5003:5012   */\n      dup4\n        /* \"#utility.yul\":4999:5016   */\n      add\n        /* \"#utility.yul\":4990:4996   */\n      dup7\n        /* \"#utility.yul\":4946:5017   */\n      tag_61\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":5027:5099   */\n      tag_132\n        /* \"#utility.yul\":5095:5097   */\n      0x20\n        /* \"#utility.yul\":5084:5093   */\n      dup4\n        /* \"#utility.yul\":5080:5098   */\n      add\n        /* \"#utility.yul\":5071:5077   */\n      dup6\n        /* \"#utility.yul\":5027:5099   */\n      tag_61\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":5109:5181   */\n      tag_133\n        /* \"#utility.yul\":5177:5179   */\n      0x40\n        /* \"#utility.yul\":5166:5175   */\n      dup4\n        /* \"#utility.yul\":5162:5180   */\n      add\n        /* \"#utility.yul\":5153:5159   */\n      dup5\n        /* \"#utility.yul\":5109:5181   */\n      tag_73\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":4746:5188   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220aa310408c660aa7453ac512a5ead19732c8dca4b4e5131d005b238e18f7e2b3464736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_108": {
									"entryPoint": null,
									"id": 108,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 322,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_address_fromMemory": {
									"entryPoint": 342,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 283,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 252,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 248,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 300,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1511:2",
										"nodeType": "YulBlock",
										"src": "0:1511:2",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:2",
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nativeSrc": "57:19:2",
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:2",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nativeSrc": "67:9:2",
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:2",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:2",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nativeSrc": "177:28:2",
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:2",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:2",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nativeSrc": "187:12:2",
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nativeSrc": "187:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nativeSrc": "300:28:2",
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:2",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:2",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nativeSrc": "310:12:2",
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nativeSrc": "310:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nativeSrc": "379:81:2",
													"nodeType": "YulBlock",
													"src": "379:81:2",
													"statements": [
														{
															"nativeSrc": "389:65:2",
															"nodeType": "YulAssignment",
															"src": "389:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:2",
																		"nodeType": "YulLiteral",
																		"src": "411:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:2"
																},
																"nativeSrc": "400:54:2",
																"nodeType": "YulFunctionCall",
																"src": "400:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:2",
														"nodeType": "YulTypedName",
														"src": "361:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:2",
														"nodeType": "YulTypedName",
														"src": "371:7:2",
														"type": ""
													}
												],
												"src": "334:126:2"
											},
											{
												"body": {
													"nativeSrc": "511:51:2",
													"nodeType": "YulBlock",
													"src": "511:51:2",
													"statements": [
														{
															"nativeSrc": "521:35:2",
															"nodeType": "YulAssignment",
															"src": "521:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:2"
																},
																"nativeSrc": "532:24:2",
																"nodeType": "YulFunctionCall",
																"src": "532:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:2",
														"nodeType": "YulTypedName",
														"src": "493:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:2",
														"nodeType": "YulTypedName",
														"src": "503:7:2",
														"type": ""
													}
												],
												"src": "466:96:2"
											},
											{
												"body": {
													"nativeSrc": "611:79:2",
													"nodeType": "YulBlock",
													"src": "611:79:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:2",
																"nodeType": "YulBlock",
																"src": "668:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:2",
																					"nodeType": "YulLiteral",
																					"src": "677:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:2",
																					"nodeType": "YulLiteral",
																					"src": "680:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:2"
																			},
																			"nativeSrc": "670:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:2"
																		},
																		"nativeSrc": "670:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:2",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:2"
																				},
																				"nativeSrc": "641:24:2",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:2"
																		},
																		"nativeSrc": "631:35:2",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:2"
																},
																"nativeSrc": "624:43:2",
																"nodeType": "YulFunctionCall",
																"src": "624:43:2"
															},
															"nativeSrc": "621:63:2",
															"nodeType": "YulIf",
															"src": "621:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:2",
														"nodeType": "YulTypedName",
														"src": "604:5:2",
														"type": ""
													}
												],
												"src": "568:122:2"
											},
											{
												"body": {
													"nativeSrc": "759:80:2",
													"nodeType": "YulBlock",
													"src": "759:80:2",
													"statements": [
														{
															"nativeSrc": "769:22:2",
															"nodeType": "YulAssignment",
															"src": "769:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:2"
																},
																"nativeSrc": "778:13:2",
																"nodeType": "YulFunctionCall",
																"src": "778:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:2",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:2"
																},
																"nativeSrc": "800:33:2",
																"nodeType": "YulFunctionCall",
																"src": "800:33:2"
															},
															"nativeSrc": "800:33:2",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:2"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:2",
														"nodeType": "YulTypedName",
														"src": "737:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:2",
														"nodeType": "YulTypedName",
														"src": "745:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:2",
														"nodeType": "YulTypedName",
														"src": "753:5:2",
														"type": ""
													}
												],
												"src": "696:143:2"
											},
											{
												"body": {
													"nativeSrc": "956:552:2",
													"nodeType": "YulBlock",
													"src": "956:552:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "1002:83:2",
																"nodeType": "YulBlock",
																"src": "1002:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1004:77:2",
																				"nodeType": "YulIdentifier",
																				"src": "1004:77:2"
																			},
																			"nativeSrc": "1004:79:2",
																			"nodeType": "YulFunctionCall",
																			"src": "1004:79:2"
																		},
																		"nativeSrc": "1004:79:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "1004:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "977:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "977:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "986:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "986:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "973:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "973:3:2"
																		},
																		"nativeSrc": "973:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "973:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "998:2:2",
																		"nodeType": "YulLiteral",
																		"src": "998:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "969:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "969:3:2"
																},
																"nativeSrc": "969:32:2",
																"nodeType": "YulFunctionCall",
																"src": "969:32:2"
															},
															"nativeSrc": "966:119:2",
															"nodeType": "YulIf",
															"src": "966:119:2"
														},
														{
															"nativeSrc": "1095:128:2",
															"nodeType": "YulBlock",
															"src": "1095:128:2",
															"statements": [
																{
																	"nativeSrc": "1110:15:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1110:15:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1124:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1124:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1114:6:2",
																			"nodeType": "YulTypedName",
																			"src": "1114:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1139:74:2",
																	"nodeType": "YulAssignment",
																	"src": "1139:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1185:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "1185:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1196:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "1196:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1181:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "1181:3:2"
																				},
																				"nativeSrc": "1181:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1181:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1205:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1205:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1149:31:2",
																			"nodeType": "YulIdentifier",
																			"src": "1149:31:2"
																		},
																		"nativeSrc": "1149:64:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1149:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1139:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "1139:6:2"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1233:129:2",
															"nodeType": "YulBlock",
															"src": "1233:129:2",
															"statements": [
																{
																	"nativeSrc": "1248:16:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1248:16:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1262:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1262:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1252:6:2",
																			"nodeType": "YulTypedName",
																			"src": "1252:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1278:74:2",
																	"nodeType": "YulAssignment",
																	"src": "1278:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1324:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "1324:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1335:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "1335:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1320:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "1320:3:2"
																				},
																				"nativeSrc": "1320:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1320:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1344:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1344:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1288:31:2",
																			"nodeType": "YulIdentifier",
																			"src": "1288:31:2"
																		},
																		"nativeSrc": "1288:64:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1288:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1278:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "1278:6:2"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1372:129:2",
															"nodeType": "YulBlock",
															"src": "1372:129:2",
															"statements": [
																{
																	"nativeSrc": "1387:16:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1387:16:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1401:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1401:2:2",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1391:6:2",
																			"nodeType": "YulTypedName",
																			"src": "1391:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1417:74:2",
																	"nodeType": "YulAssignment",
																	"src": "1417:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1463:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "1463:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1474:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "1474:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1459:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "1459:3:2"
																				},
																				"nativeSrc": "1459:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1459:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1483:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1483:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1427:31:2",
																			"nodeType": "YulIdentifier",
																			"src": "1427:31:2"
																		},
																		"nativeSrc": "1427:64:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1427:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1417:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "1417:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_address_fromMemory",
												"nativeSrc": "845:663:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "910:9:2",
														"nodeType": "YulTypedName",
														"src": "910:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "921:7:2",
														"nodeType": "YulTypedName",
														"src": "921:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "933:6:2",
														"nodeType": "YulTypedName",
														"src": "933:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "941:6:2",
														"nodeType": "YulTypedName",
														"src": "941:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "949:6:2",
														"nodeType": "YulTypedName",
														"src": "949:6:2",
														"type": ""
													}
												],
												"src": "845:663:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060405161097a38038061097a83398181016040528101906100319190610156565b825f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050506101a6565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610125826100fc565b9050919050565b6101358161011b565b811461013f575f80fd5b50565b5f815190506101508161012c565b92915050565b5f805f6060848603121561016d5761016c6100f8565b5b5f61017a86828701610142565b935050602061018b86828701610142565b925050604061019c86828701610142565b9150509250925092565b6107c7806101b35f395ff3fe608060405234801561000f575f80fd5b5060043610610060575f3560e01c806302d454571461006457806306b091f9146100825780639ab4a4451461009e5780639d76ea58146100bc578063c641b4ce146100da578063fc4751d7146100f6575b5f80fd5b61006c610112565b6040516100799190610545565b60405180910390f35b61009c600480360381019061009791906105bf565b610137565b005b6100a6610244565b6040516100b39190610545565b60405180910390f35b6100c4610269565b6040516100d19190610545565b60405180910390f35b6100f460048036038101906100ef91906105fd565b61028c565b005b610110600480360381019061010b91906105fd565b6103c9565b005b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101bb906106a8565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016101ff9291906106d5565b6020604051808303815f875af115801561021b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061023f9190610731565b505050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016102ea9392919061075c565b6020604051808303815f875af1158015610306573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061032a9190610731565b505f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016103859291906106d5565b6020604051808303815f875af11580156103a1573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103c59190610731565b5050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016104279392919061075c565b6020604051808303815f875af1158015610443573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104679190610731565b505f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016104c29291906106d5565b6020604051808303815f875af11580156104de573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105029190610731565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61052f82610506565b9050919050565b61053f81610525565b82525050565b5f6020820190506105585f830184610536565b92915050565b5f80fd5b61056b81610525565b8114610575575f80fd5b50565b5f8135905061058681610562565b92915050565b5f819050919050565b61059e8161058c565b81146105a8575f80fd5b50565b5f813590506105b981610595565b92915050565b5f80604083850312156105d5576105d461055e565b5b5f6105e285828601610578565b92505060206105f3858286016105ab565b9150509250929050565b5f602082840312156106125761061161055e565b5b5f61061f848285016105ab565b91505092915050565b5f82825260208201905092915050565b7f4f6e6c792074686520746f6b656e20636f6e74726163742063616e20776974685f8201527f6472617720746f6b656e73000000000000000000000000000000000000000000602082015250565b5f610692602b83610628565b915061069d82610638565b604082019050919050565b5f6020820190508181035f8301526106bf81610686565b9050919050565b6106cf8161058c565b82525050565b5f6040820190506106e85f830185610536565b6106f560208301846106c6565b9392505050565b5f8115159050919050565b610710816106fc565b811461071a575f80fd5b50565b5f8151905061072b81610707565b92915050565b5f602082840312156107465761074561055e565b5b5f6107538482850161071d565b91505092915050565b5f60608201905061076f5f830186610536565b61077c6020830185610536565b61078960408301846106c6565b94935050505056fea2646970667358221220aa310408c660aa7453ac512a5ead19732c8dca4b4e5131d005b238e18f7e2b3464736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x97A CODESIZE SUB DUP1 PUSH2 0x97A DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x156 JUMP JUMPDEST DUP3 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH2 0x1A6 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x125 DUP3 PUSH2 0xFC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x135 DUP2 PUSH2 0x11B JUMP JUMPDEST DUP2 EQ PUSH2 0x13F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x150 DUP2 PUSH2 0x12C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x16D JUMPI PUSH2 0x16C PUSH2 0xF8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17A DUP7 DUP3 DUP8 ADD PUSH2 0x142 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x18B DUP7 DUP3 DUP8 ADD PUSH2 0x142 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x19C DUP7 DUP3 DUP8 ADD PUSH2 0x142 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x7C7 DUP1 PUSH2 0x1B3 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x60 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2D45457 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x6B091F9 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x9AB4A445 EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0x9D76EA58 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0xC641B4CE EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0xFC4751D7 EQ PUSH2 0xF6 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x6C PUSH2 0x112 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x545 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x5BF JUMP JUMPDEST PUSH2 0x137 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA6 PUSH2 0x244 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x545 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC4 PUSH2 0x269 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x545 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEF SWAP2 SWAP1 PUSH2 0x5FD JUMP JUMPDEST PUSH2 0x28C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x110 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10B SWAP2 SWAP1 PUSH2 0x5FD JUMP JUMPDEST PUSH2 0x3C9 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BB SWAP1 PUSH2 0x6A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FF SWAP3 SWAP2 SWAP1 PUSH2 0x6D5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x21B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x731 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2EA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x75C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x306 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x731 JUMP JUMPDEST POP PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x385 SWAP3 SWAP2 SWAP1 PUSH2 0x6D5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3A1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3C5 SWAP2 SWAP1 PUSH2 0x731 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x427 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x75C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x443 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x467 SWAP2 SWAP1 PUSH2 0x731 JUMP JUMPDEST POP PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C2 SWAP3 SWAP2 SWAP1 PUSH2 0x6D5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4DE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x502 SWAP2 SWAP1 PUSH2 0x731 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x52F DUP3 PUSH2 0x506 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x53F DUP2 PUSH2 0x525 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x558 PUSH0 DUP4 ADD DUP5 PUSH2 0x536 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x56B DUP2 PUSH2 0x525 JUMP JUMPDEST DUP2 EQ PUSH2 0x575 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x586 DUP2 PUSH2 0x562 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x59E DUP2 PUSH2 0x58C JUMP JUMPDEST DUP2 EQ PUSH2 0x5A8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5B9 DUP2 PUSH2 0x595 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5D5 JUMPI PUSH2 0x5D4 PUSH2 0x55E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x5E2 DUP6 DUP3 DUP7 ADD PUSH2 0x578 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x5F3 DUP6 DUP3 DUP7 ADD PUSH2 0x5AB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x612 JUMPI PUSH2 0x611 PUSH2 0x55E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x61F DUP5 DUP3 DUP6 ADD PUSH2 0x5AB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C792074686520746F6B656E20636F6E74726163742063616E2077697468 PUSH0 DUP3 ADD MSTORE PUSH32 0x6472617720746F6B656E73000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x692 PUSH1 0x2B DUP4 PUSH2 0x628 JUMP JUMPDEST SWAP2 POP PUSH2 0x69D DUP3 PUSH2 0x638 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x6BF DUP2 PUSH2 0x686 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6CF DUP2 PUSH2 0x58C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x6E8 PUSH0 DUP4 ADD DUP6 PUSH2 0x536 JUMP JUMPDEST PUSH2 0x6F5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x6C6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x710 DUP2 PUSH2 0x6FC JUMP JUMPDEST DUP2 EQ PUSH2 0x71A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x72B DUP2 PUSH2 0x707 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x746 JUMPI PUSH2 0x745 PUSH2 0x55E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x753 DUP5 DUP3 DUP6 ADD PUSH2 0x71D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x76F PUSH0 DUP4 ADD DUP7 PUSH2 0x536 JUMP JUMPDEST PUSH2 0x77C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x536 JUMP JUMPDEST PUSH2 0x789 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x6C6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA BALANCE DIV ADDMOD 0xC6 PUSH1 0xAA PUSH21 0x53AC512A5EAD19732C8DCA4B4E5131D005B238E18F PUSH31 0x2B3464736F6C63430008180033000000000000000000000000000000000000 ",
							"sourceMap": "120:953:1:-:0;;;248:200;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;353:13;338:12;;:28;;;;;;;;;;;;;;;;;;391:12;377:11;;:26;;;;;;;;;;;;;;;;;;428:12;414:11;;:26;;;;;;;;;;;;;;;;;;248:200;;;120:953;;88:117:2;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:663::-;933:6;941;949;998:2;986:9;977:7;973:23;969:32;966:119;;;1004:79;;:::i;:::-;966:119;1124:1;1149:64;1205:7;1196:6;1185:9;1181:22;1149:64;:::i;:::-;1139:74;;1095:128;1262:2;1288:64;1344:7;1335:6;1324:9;1320:22;1288:64;:::i;:::-;1278:74;;1233:129;1401:2;1427:64;1483:7;1474:6;1463:9;1459:22;1427:64;:::i;:::-;1417:74;;1372:129;845:663;;;;;:::o;120:953:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@tokenAddress_82": {
									"entryPoint": 617,
									"id": 82,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tradeUSDC_164": {
									"entryPoint": 652,
									"id": 164,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@tradeUSDT_136": {
									"entryPoint": 969,
									"id": 136,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@usdcAddress_86": {
									"entryPoint": 274,
									"id": 86,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@usdtAddress_84": {
									"entryPoint": 580,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawTokens_189": {
									"entryPoint": 311,
									"id": 189,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1400,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 1821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1451,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1471,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1841,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1533,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1334,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_6eb4f48b80e4a55d5340ca03867d936f56c8c41ad609d6666c7ca153fd7b0dff_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1670,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1734,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1349,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1884,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1749,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6eb4f48b80e4a55d5340ca03867d936f56c8c41ad609d6666c7ca153fd7b0dff__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1704,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1576,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1317,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1788,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1286,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1420,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1374,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_6eb4f48b80e4a55d5340ca03867d936f56c8c41ad609d6666c7ca153fd7b0dff": {
									"entryPoint": 1592,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1378,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 1799,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1429,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5191:2",
										"nodeType": "YulBlock",
										"src": "0:5191:2",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:2",
													"nodeType": "YulBlock",
													"src": "52:81:2",
													"statements": [
														{
															"nativeSrc": "62:65:2",
															"nodeType": "YulAssignment",
															"src": "62:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:2",
																		"nodeType": "YulLiteral",
																		"src": "84:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:2"
																},
																"nativeSrc": "73:54:2",
																"nodeType": "YulFunctionCall",
																"src": "73:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:2",
														"nodeType": "YulTypedName",
														"src": "34:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:2",
														"nodeType": "YulTypedName",
														"src": "44:7:2",
														"type": ""
													}
												],
												"src": "7:126:2"
											},
											{
												"body": {
													"nativeSrc": "184:51:2",
													"nodeType": "YulBlock",
													"src": "184:51:2",
													"statements": [
														{
															"nativeSrc": "194:35:2",
															"nodeType": "YulAssignment",
															"src": "194:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:2"
																},
																"nativeSrc": "205:24:2",
																"nodeType": "YulFunctionCall",
																"src": "205:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:2",
														"nodeType": "YulTypedName",
														"src": "166:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:2",
														"nodeType": "YulTypedName",
														"src": "176:7:2",
														"type": ""
													}
												],
												"src": "139:96:2"
											},
											{
												"body": {
													"nativeSrc": "306:53:2",
													"nodeType": "YulBlock",
													"src": "306:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:2",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:2"
																		},
																		"nativeSrc": "328:24:2",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:2"
																},
																"nativeSrc": "316:37:2",
																"nodeType": "YulFunctionCall",
																"src": "316:37:2"
															},
															"nativeSrc": "316:37:2",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:2",
														"nodeType": "YulTypedName",
														"src": "294:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:2",
														"nodeType": "YulTypedName",
														"src": "301:3:2",
														"type": ""
													}
												],
												"src": "241:118:2"
											},
											{
												"body": {
													"nativeSrc": "463:124:2",
													"nodeType": "YulBlock",
													"src": "463:124:2",
													"statements": [
														{
															"nativeSrc": "473:26:2",
															"nodeType": "YulAssignment",
															"src": "473:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:2",
																		"nodeType": "YulLiteral",
																		"src": "496:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:2"
																},
																"nativeSrc": "481:18:2",
																"nodeType": "YulFunctionCall",
																"src": "481:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:2",
																				"nodeType": "YulLiteral",
																				"src": "577:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:2"
																		},
																		"nativeSrc": "562:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:2",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:2"
																},
																"nativeSrc": "509:71:2",
																"nodeType": "YulFunctionCall",
																"src": "509:71:2"
															},
															"nativeSrc": "509:71:2",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:2",
														"nodeType": "YulTypedName",
														"src": "435:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:2",
														"nodeType": "YulTypedName",
														"src": "447:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:2",
														"nodeType": "YulTypedName",
														"src": "458:4:2",
														"type": ""
													}
												],
												"src": "365:222:2"
											},
											{
												"body": {
													"nativeSrc": "633:35:2",
													"nodeType": "YulBlock",
													"src": "633:35:2",
													"statements": [
														{
															"nativeSrc": "643:19:2",
															"nodeType": "YulAssignment",
															"src": "643:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "659:2:2",
																		"nodeType": "YulLiteral",
																		"src": "659:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "653:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "653:5:2"
																},
																"nativeSrc": "653:9:2",
																"nodeType": "YulFunctionCall",
																"src": "653:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "643:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "643:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "593:75:2",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "626:6:2",
														"nodeType": "YulTypedName",
														"src": "626:6:2",
														"type": ""
													}
												],
												"src": "593:75:2"
											},
											{
												"body": {
													"nativeSrc": "763:28:2",
													"nodeType": "YulBlock",
													"src": "763:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "780:1:2",
																		"nodeType": "YulLiteral",
																		"src": "780:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "783:1:2",
																		"nodeType": "YulLiteral",
																		"src": "783:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "773:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:2"
																},
																"nativeSrc": "773:12:2",
																"nodeType": "YulFunctionCall",
																"src": "773:12:2"
															},
															"nativeSrc": "773:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "773:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "674:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "674:117:2"
											},
											{
												"body": {
													"nativeSrc": "886:28:2",
													"nodeType": "YulBlock",
													"src": "886:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "903:1:2",
																		"nodeType": "YulLiteral",
																		"src": "903:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "906:1:2",
																		"nodeType": "YulLiteral",
																		"src": "906:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "896:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "896:6:2"
																},
																"nativeSrc": "896:12:2",
																"nodeType": "YulFunctionCall",
																"src": "896:12:2"
															},
															"nativeSrc": "896:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "896:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "797:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "797:117:2"
											},
											{
												"body": {
													"nativeSrc": "963:79:2",
													"nodeType": "YulBlock",
													"src": "963:79:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "1020:16:2",
																"nodeType": "YulBlock",
																"src": "1020:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1029:1:2",
																					"nodeType": "YulLiteral",
																					"src": "1029:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1032:1:2",
																					"nodeType": "YulLiteral",
																					"src": "1032:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1022:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "1022:6:2"
																			},
																			"nativeSrc": "1022:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "1022:12:2"
																		},
																		"nativeSrc": "1022:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "1022:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "986:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "986:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1011:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "1011:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "993:17:2",
																					"nodeType": "YulIdentifier",
																					"src": "993:17:2"
																				},
																				"nativeSrc": "993:24:2",
																				"nodeType": "YulFunctionCall",
																				"src": "993:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "983:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "983:2:2"
																		},
																		"nativeSrc": "983:35:2",
																		"nodeType": "YulFunctionCall",
																		"src": "983:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "976:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "976:6:2"
																},
																"nativeSrc": "976:43:2",
																"nodeType": "YulFunctionCall",
																"src": "976:43:2"
															},
															"nativeSrc": "973:63:2",
															"nodeType": "YulIf",
															"src": "973:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "920:122:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "956:5:2",
														"nodeType": "YulTypedName",
														"src": "956:5:2",
														"type": ""
													}
												],
												"src": "920:122:2"
											},
											{
												"body": {
													"nativeSrc": "1100:87:2",
													"nodeType": "YulBlock",
													"src": "1100:87:2",
													"statements": [
														{
															"nativeSrc": "1110:29:2",
															"nodeType": "YulAssignment",
															"src": "1110:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1132:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "1132:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1119:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "1119:12:2"
																},
																"nativeSrc": "1119:20:2",
																"nodeType": "YulFunctionCall",
																"src": "1119:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1110:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "1110:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1175:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "1175:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1148:26:2",
																	"nodeType": "YulIdentifier",
																	"src": "1148:26:2"
																},
																"nativeSrc": "1148:33:2",
																"nodeType": "YulFunctionCall",
																"src": "1148:33:2"
															},
															"nativeSrc": "1148:33:2",
															"nodeType": "YulExpressionStatement",
															"src": "1148:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1048:139:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1078:6:2",
														"nodeType": "YulTypedName",
														"src": "1078:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1086:3:2",
														"nodeType": "YulTypedName",
														"src": "1086:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1094:5:2",
														"nodeType": "YulTypedName",
														"src": "1094:5:2",
														"type": ""
													}
												],
												"src": "1048:139:2"
											},
											{
												"body": {
													"nativeSrc": "1238:32:2",
													"nodeType": "YulBlock",
													"src": "1238:32:2",
													"statements": [
														{
															"nativeSrc": "1248:16:2",
															"nodeType": "YulAssignment",
															"src": "1248:16:2",
															"value": {
																"name": "value",
																"nativeSrc": "1259:5:2",
																"nodeType": "YulIdentifier",
																"src": "1259:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1248:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "1248:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1193:77:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1220:5:2",
														"nodeType": "YulTypedName",
														"src": "1220:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1230:7:2",
														"nodeType": "YulTypedName",
														"src": "1230:7:2",
														"type": ""
													}
												],
												"src": "1193:77:2"
											},
											{
												"body": {
													"nativeSrc": "1319:79:2",
													"nodeType": "YulBlock",
													"src": "1319:79:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "1376:16:2",
																"nodeType": "YulBlock",
																"src": "1376:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1385:1:2",
																					"nodeType": "YulLiteral",
																					"src": "1385:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1388:1:2",
																					"nodeType": "YulLiteral",
																					"src": "1388:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1378:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "1378:6:2"
																			},
																			"nativeSrc": "1378:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "1378:12:2"
																		},
																		"nativeSrc": "1378:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "1378:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1342:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "1342:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1367:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "1367:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1349:17:2",
																					"nodeType": "YulIdentifier",
																					"src": "1349:17:2"
																				},
																				"nativeSrc": "1349:24:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1349:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1339:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "1339:2:2"
																		},
																		"nativeSrc": "1339:35:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1339:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1332:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1332:6:2"
																},
																"nativeSrc": "1332:43:2",
																"nodeType": "YulFunctionCall",
																"src": "1332:43:2"
															},
															"nativeSrc": "1329:63:2",
															"nodeType": "YulIf",
															"src": "1329:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1276:122:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:2",
														"nodeType": "YulTypedName",
														"src": "1312:5:2",
														"type": ""
													}
												],
												"src": "1276:122:2"
											},
											{
												"body": {
													"nativeSrc": "1456:87:2",
													"nodeType": "YulBlock",
													"src": "1456:87:2",
													"statements": [
														{
															"nativeSrc": "1466:29:2",
															"nodeType": "YulAssignment",
															"src": "1466:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1488:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "1488:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1475:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "1475:12:2"
																},
																"nativeSrc": "1475:20:2",
																"nodeType": "YulFunctionCall",
																"src": "1475:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1466:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "1466:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1531:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "1531:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1504:26:2",
																	"nodeType": "YulIdentifier",
																	"src": "1504:26:2"
																},
																"nativeSrc": "1504:33:2",
																"nodeType": "YulFunctionCall",
																"src": "1504:33:2"
															},
															"nativeSrc": "1504:33:2",
															"nodeType": "YulExpressionStatement",
															"src": "1504:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1404:139:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1434:6:2",
														"nodeType": "YulTypedName",
														"src": "1434:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1442:3:2",
														"nodeType": "YulTypedName",
														"src": "1442:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1450:5:2",
														"nodeType": "YulTypedName",
														"src": "1450:5:2",
														"type": ""
													}
												],
												"src": "1404:139:2"
											},
											{
												"body": {
													"nativeSrc": "1632:391:2",
													"nodeType": "YulBlock",
													"src": "1632:391:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "1678:83:2",
																"nodeType": "YulBlock",
																"src": "1678:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1680:77:2",
																				"nodeType": "YulIdentifier",
																				"src": "1680:77:2"
																			},
																			"nativeSrc": "1680:79:2",
																			"nodeType": "YulFunctionCall",
																			"src": "1680:79:2"
																		},
																		"nativeSrc": "1680:79:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "1680:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1653:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1653:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1662:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1662:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1649:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1649:3:2"
																		},
																		"nativeSrc": "1649:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1649:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1674:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1674:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1645:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1645:3:2"
																},
																"nativeSrc": "1645:32:2",
																"nodeType": "YulFunctionCall",
																"src": "1645:32:2"
															},
															"nativeSrc": "1642:119:2",
															"nodeType": "YulIf",
															"src": "1642:119:2"
														},
														{
															"nativeSrc": "1771:117:2",
															"nodeType": "YulBlock",
															"src": "1771:117:2",
															"statements": [
																{
																	"nativeSrc": "1786:15:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1786:15:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1800:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1800:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1790:6:2",
																			"nodeType": "YulTypedName",
																			"src": "1790:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1815:63:2",
																	"nodeType": "YulAssignment",
																	"src": "1815:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1850:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "1850:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1861:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "1861:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1846:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "1846:3:2"
																				},
																				"nativeSrc": "1846:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1846:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1870:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1870:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1825:20:2",
																			"nodeType": "YulIdentifier",
																			"src": "1825:20:2"
																		},
																		"nativeSrc": "1825:53:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1825:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1815:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "1815:6:2"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1898:118:2",
															"nodeType": "YulBlock",
															"src": "1898:118:2",
															"statements": [
																{
																	"nativeSrc": "1913:16:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1913:16:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1927:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1927:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1917:6:2",
																			"nodeType": "YulTypedName",
																			"src": "1917:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1943:63:2",
																	"nodeType": "YulAssignment",
																	"src": "1943:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1978:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "1978:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1989:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "1989:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1974:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "1974:3:2"
																				},
																				"nativeSrc": "1974:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1974:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1998:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1998:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1953:20:2",
																			"nodeType": "YulIdentifier",
																			"src": "1953:20:2"
																		},
																		"nativeSrc": "1953:53:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1953:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1943:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "1943:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1549:474:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1594:9:2",
														"nodeType": "YulTypedName",
														"src": "1594:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1605:7:2",
														"nodeType": "YulTypedName",
														"src": "1605:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1617:6:2",
														"nodeType": "YulTypedName",
														"src": "1617:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1625:6:2",
														"nodeType": "YulTypedName",
														"src": "1625:6:2",
														"type": ""
													}
												],
												"src": "1549:474:2"
											},
											{
												"body": {
													"nativeSrc": "2095:263:2",
													"nodeType": "YulBlock",
													"src": "2095:263:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "2141:83:2",
																"nodeType": "YulBlock",
																"src": "2141:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2143:77:2",
																				"nodeType": "YulIdentifier",
																				"src": "2143:77:2"
																			},
																			"nativeSrc": "2143:79:2",
																			"nodeType": "YulFunctionCall",
																			"src": "2143:79:2"
																		},
																		"nativeSrc": "2143:79:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "2143:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2116:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "2116:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2125:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2125:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2112:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2112:3:2"
																		},
																		"nativeSrc": "2112:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2112:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2137:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2137:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2108:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2108:3:2"
																},
																"nativeSrc": "2108:32:2",
																"nodeType": "YulFunctionCall",
																"src": "2108:32:2"
															},
															"nativeSrc": "2105:119:2",
															"nodeType": "YulIf",
															"src": "2105:119:2"
														},
														{
															"nativeSrc": "2234:117:2",
															"nodeType": "YulBlock",
															"src": "2234:117:2",
															"statements": [
																{
																	"nativeSrc": "2249:15:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2249:15:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2263:1:2",
																		"nodeType": "YulLiteral",
																		"src": "2263:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2253:6:2",
																			"nodeType": "YulTypedName",
																			"src": "2253:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2278:63:2",
																	"nodeType": "YulAssignment",
																	"src": "2278:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2313:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "2313:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2324:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "2324:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2309:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "2309:3:2"
																				},
																				"nativeSrc": "2309:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "2309:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2333:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "2333:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2288:20:2",
																			"nodeType": "YulIdentifier",
																			"src": "2288:20:2"
																		},
																		"nativeSrc": "2288:53:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2288:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2278:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "2278:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2029:329:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2065:9:2",
														"nodeType": "YulTypedName",
														"src": "2065:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2076:7:2",
														"nodeType": "YulTypedName",
														"src": "2076:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2088:6:2",
														"nodeType": "YulTypedName",
														"src": "2088:6:2",
														"type": ""
													}
												],
												"src": "2029:329:2"
											},
											{
												"body": {
													"nativeSrc": "2460:73:2",
													"nodeType": "YulBlock",
													"src": "2460:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2477:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "2477:3:2"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2482:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "2482:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2470:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2470:6:2"
																},
																"nativeSrc": "2470:19:2",
																"nodeType": "YulFunctionCall",
																"src": "2470:19:2"
															},
															"nativeSrc": "2470:19:2",
															"nodeType": "YulExpressionStatement",
															"src": "2470:19:2"
														},
														{
															"nativeSrc": "2498:29:2",
															"nodeType": "YulAssignment",
															"src": "2498:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2517:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "2517:3:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2522:4:2",
																		"nodeType": "YulLiteral",
																		"src": "2522:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2513:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2513:3:2"
																},
																"nativeSrc": "2513:14:2",
																"nodeType": "YulFunctionCall",
																"src": "2513:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2498:11:2",
																	"nodeType": "YulIdentifier",
																	"src": "2498:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2364:169:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2432:3:2",
														"nodeType": "YulTypedName",
														"src": "2432:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2437:6:2",
														"nodeType": "YulTypedName",
														"src": "2437:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2448:11:2",
														"nodeType": "YulTypedName",
														"src": "2448:11:2",
														"type": ""
													}
												],
												"src": "2364:169:2"
											},
											{
												"body": {
													"nativeSrc": "2645:124:2",
													"nodeType": "YulBlock",
													"src": "2645:124:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2667:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "2667:6:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2675:1:2",
																				"nodeType": "YulLiteral",
																				"src": "2675:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2663:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2663:3:2"
																		},
																		"nativeSrc": "2663:14:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2663:14:2"
																	},
																	{
																		"hexValue": "4f6e6c792074686520746f6b656e20636f6e74726163742063616e2077697468",
																		"kind": "string",
																		"nativeSrc": "2679:34:2",
																		"nodeType": "YulLiteral",
																		"src": "2679:34:2",
																		"type": "",
																		"value": "Only the token contract can with"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2656:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2656:6:2"
																},
																"nativeSrc": "2656:58:2",
																"nodeType": "YulFunctionCall",
																"src": "2656:58:2"
															},
															"nativeSrc": "2656:58:2",
															"nodeType": "YulExpressionStatement",
															"src": "2656:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2735:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "2735:6:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2743:2:2",
																				"nodeType": "YulLiteral",
																				"src": "2743:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2731:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:2"
																		},
																		"nativeSrc": "2731:15:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:15:2"
																	},
																	{
																		"hexValue": "6472617720746f6b656e73",
																		"kind": "string",
																		"nativeSrc": "2748:13:2",
																		"nodeType": "YulLiteral",
																		"src": "2748:13:2",
																		"type": "",
																		"value": "draw tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2724:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2724:6:2"
																},
																"nativeSrc": "2724:38:2",
																"nodeType": "YulFunctionCall",
																"src": "2724:38:2"
															},
															"nativeSrc": "2724:38:2",
															"nodeType": "YulExpressionStatement",
															"src": "2724:38:2"
														}
													]
												},
												"name": "store_literal_in_memory_6eb4f48b80e4a55d5340ca03867d936f56c8c41ad609d6666c7ca153fd7b0dff",
												"nativeSrc": "2539:230:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2637:6:2",
														"nodeType": "YulTypedName",
														"src": "2637:6:2",
														"type": ""
													}
												],
												"src": "2539:230:2"
											},
											{
												"body": {
													"nativeSrc": "2921:220:2",
													"nodeType": "YulBlock",
													"src": "2921:220:2",
													"statements": [
														{
															"nativeSrc": "2931:74:2",
															"nodeType": "YulAssignment",
															"src": "2931:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2997:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "2997:3:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3002:2:2",
																		"nodeType": "YulLiteral",
																		"src": "3002:2:2",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2938:58:2",
																	"nodeType": "YulIdentifier",
																	"src": "2938:58:2"
																},
																"nativeSrc": "2938:67:2",
																"nodeType": "YulFunctionCall",
																"src": "2938:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2931:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2931:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3103:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "3103:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6eb4f48b80e4a55d5340ca03867d936f56c8c41ad609d6666c7ca153fd7b0dff",
																	"nativeSrc": "3014:88:2",
																	"nodeType": "YulIdentifier",
																	"src": "3014:88:2"
																},
																"nativeSrc": "3014:93:2",
																"nodeType": "YulFunctionCall",
																"src": "3014:93:2"
															},
															"nativeSrc": "3014:93:2",
															"nodeType": "YulExpressionStatement",
															"src": "3014:93:2"
														},
														{
															"nativeSrc": "3116:19:2",
															"nodeType": "YulAssignment",
															"src": "3116:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3127:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "3127:3:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3132:2:2",
																		"nodeType": "YulLiteral",
																		"src": "3132:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3123:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3123:3:2"
																},
																"nativeSrc": "3123:12:2",
																"nodeType": "YulFunctionCall",
																"src": "3123:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3116:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3116:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6eb4f48b80e4a55d5340ca03867d936f56c8c41ad609d6666c7ca153fd7b0dff_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2775:366:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2909:3:2",
														"nodeType": "YulTypedName",
														"src": "2909:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2917:3:2",
														"nodeType": "YulTypedName",
														"src": "2917:3:2",
														"type": ""
													}
												],
												"src": "2775:366:2"
											},
											{
												"body": {
													"nativeSrc": "3318:248:2",
													"nodeType": "YulBlock",
													"src": "3318:248:2",
													"statements": [
														{
															"nativeSrc": "3328:26:2",
															"nodeType": "YulAssignment",
															"src": "3328:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3340:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "3340:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3351:2:2",
																		"nodeType": "YulLiteral",
																		"src": "3351:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3336:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3336:3:2"
																},
																"nativeSrc": "3336:18:2",
																"nodeType": "YulFunctionCall",
																"src": "3336:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3328:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "3328:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3375:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "3375:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3386:1:2",
																				"nodeType": "YulLiteral",
																				"src": "3386:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3371:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "3371:3:2"
																		},
																		"nativeSrc": "3371:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3371:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3394:4:2",
																				"nodeType": "YulIdentifier",
																				"src": "3394:4:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3400:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "3400:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3390:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "3390:3:2"
																		},
																		"nativeSrc": "3390:20:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3390:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3364:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3364:6:2"
																},
																"nativeSrc": "3364:47:2",
																"nodeType": "YulFunctionCall",
																"src": "3364:47:2"
															},
															"nativeSrc": "3364:47:2",
															"nodeType": "YulExpressionStatement",
															"src": "3364:47:2"
														},
														{
															"nativeSrc": "3420:139:2",
															"nodeType": "YulAssignment",
															"src": "3420:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "3554:4:2",
																		"nodeType": "YulIdentifier",
																		"src": "3554:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6eb4f48b80e4a55d5340ca03867d936f56c8c41ad609d6666c7ca153fd7b0dff_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3428:124:2",
																	"nodeType": "YulIdentifier",
																	"src": "3428:124:2"
																},
																"nativeSrc": "3428:131:2",
																"nodeType": "YulFunctionCall",
																"src": "3428:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3420:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "3420:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6eb4f48b80e4a55d5340ca03867d936f56c8c41ad609d6666c7ca153fd7b0dff__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3147:419:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3298:9:2",
														"nodeType": "YulTypedName",
														"src": "3298:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3313:4:2",
														"nodeType": "YulTypedName",
														"src": "3313:4:2",
														"type": ""
													}
												],
												"src": "3147:419:2"
											},
											{
												"body": {
													"nativeSrc": "3637:53:2",
													"nodeType": "YulBlock",
													"src": "3637:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3654:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "3654:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3677:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "3677:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3659:17:2",
																			"nodeType": "YulIdentifier",
																			"src": "3659:17:2"
																		},
																		"nativeSrc": "3659:24:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3659:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3647:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3647:6:2"
																},
																"nativeSrc": "3647:37:2",
																"nodeType": "YulFunctionCall",
																"src": "3647:37:2"
															},
															"nativeSrc": "3647:37:2",
															"nodeType": "YulExpressionStatement",
															"src": "3647:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3572:118:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3625:5:2",
														"nodeType": "YulTypedName",
														"src": "3625:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3632:3:2",
														"nodeType": "YulTypedName",
														"src": "3632:3:2",
														"type": ""
													}
												],
												"src": "3572:118:2"
											},
											{
												"body": {
													"nativeSrc": "3822:206:2",
													"nodeType": "YulBlock",
													"src": "3822:206:2",
													"statements": [
														{
															"nativeSrc": "3832:26:2",
															"nodeType": "YulAssignment",
															"src": "3832:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3844:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "3844:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3855:2:2",
																		"nodeType": "YulLiteral",
																		"src": "3855:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3840:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3840:3:2"
																},
																"nativeSrc": "3840:18:2",
																"nodeType": "YulFunctionCall",
																"src": "3840:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3832:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "3832:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3912:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "3912:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3925:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "3925:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3936:1:2",
																				"nodeType": "YulLiteral",
																				"src": "3936:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3921:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "3921:3:2"
																		},
																		"nativeSrc": "3921:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3921:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3868:43:2",
																	"nodeType": "YulIdentifier",
																	"src": "3868:43:2"
																},
																"nativeSrc": "3868:71:2",
																"nodeType": "YulFunctionCall",
																"src": "3868:71:2"
															},
															"nativeSrc": "3868:71:2",
															"nodeType": "YulExpressionStatement",
															"src": "3868:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "3993:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "3993:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4006:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "4006:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4017:2:2",
																				"nodeType": "YulLiteral",
																				"src": "4017:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4002:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "4002:3:2"
																		},
																		"nativeSrc": "4002:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "4002:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3949:43:2",
																	"nodeType": "YulIdentifier",
																	"src": "3949:43:2"
																},
																"nativeSrc": "3949:72:2",
																"nodeType": "YulFunctionCall",
																"src": "3949:72:2"
															},
															"nativeSrc": "3949:72:2",
															"nodeType": "YulExpressionStatement",
															"src": "3949:72:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "3696:332:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3786:9:2",
														"nodeType": "YulTypedName",
														"src": "3786:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3798:6:2",
														"nodeType": "YulTypedName",
														"src": "3798:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3806:6:2",
														"nodeType": "YulTypedName",
														"src": "3806:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3817:4:2",
														"nodeType": "YulTypedName",
														"src": "3817:4:2",
														"type": ""
													}
												],
												"src": "3696:332:2"
											},
											{
												"body": {
													"nativeSrc": "4076:48:2",
													"nodeType": "YulBlock",
													"src": "4076:48:2",
													"statements": [
														{
															"nativeSrc": "4086:32:2",
															"nodeType": "YulAssignment",
															"src": "4086:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4111:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "4111:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "4104:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "4104:6:2"
																		},
																		"nativeSrc": "4104:13:2",
																		"nodeType": "YulFunctionCall",
																		"src": "4104:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4097:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "4097:6:2"
																},
																"nativeSrc": "4097:21:2",
																"nodeType": "YulFunctionCall",
																"src": "4097:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4086:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "4086:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "4034:90:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4058:5:2",
														"nodeType": "YulTypedName",
														"src": "4058:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4068:7:2",
														"nodeType": "YulTypedName",
														"src": "4068:7:2",
														"type": ""
													}
												],
												"src": "4034:90:2"
											},
											{
												"body": {
													"nativeSrc": "4170:76:2",
													"nodeType": "YulBlock",
													"src": "4170:76:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "4224:16:2",
																"nodeType": "YulBlock",
																"src": "4224:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4233:1:2",
																					"nodeType": "YulLiteral",
																					"src": "4233:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4236:1:2",
																					"nodeType": "YulLiteral",
																					"src": "4236:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4226:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "4226:6:2"
																			},
																			"nativeSrc": "4226:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "4226:12:2"
																		},
																		"nativeSrc": "4226:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "4226:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4193:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "4193:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4215:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "4215:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "4200:14:2",
																					"nodeType": "YulIdentifier",
																					"src": "4200:14:2"
																				},
																				"nativeSrc": "4200:21:2",
																				"nodeType": "YulFunctionCall",
																				"src": "4200:21:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4190:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "4190:2:2"
																		},
																		"nativeSrc": "4190:32:2",
																		"nodeType": "YulFunctionCall",
																		"src": "4190:32:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4183:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "4183:6:2"
																},
																"nativeSrc": "4183:40:2",
																"nodeType": "YulFunctionCall",
																"src": "4183:40:2"
															},
															"nativeSrc": "4180:60:2",
															"nodeType": "YulIf",
															"src": "4180:60:2"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "4130:116:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4163:5:2",
														"nodeType": "YulTypedName",
														"src": "4163:5:2",
														"type": ""
													}
												],
												"src": "4130:116:2"
											},
											{
												"body": {
													"nativeSrc": "4312:77:2",
													"nodeType": "YulBlock",
													"src": "4312:77:2",
													"statements": [
														{
															"nativeSrc": "4322:22:2",
															"nodeType": "YulAssignment",
															"src": "4322:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4337:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "4337:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4331:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "4331:5:2"
																},
																"nativeSrc": "4331:13:2",
																"nodeType": "YulFunctionCall",
																"src": "4331:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4322:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "4322:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4377:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "4377:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "4353:23:2",
																	"nodeType": "YulIdentifier",
																	"src": "4353:23:2"
																},
																"nativeSrc": "4353:30:2",
																"nodeType": "YulFunctionCall",
																"src": "4353:30:2"
															},
															"nativeSrc": "4353:30:2",
															"nodeType": "YulExpressionStatement",
															"src": "4353:30:2"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "4252:137:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4290:6:2",
														"nodeType": "YulTypedName",
														"src": "4290:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4298:3:2",
														"nodeType": "YulTypedName",
														"src": "4298:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4306:5:2",
														"nodeType": "YulTypedName",
														"src": "4306:5:2",
														"type": ""
													}
												],
												"src": "4252:137:2"
											},
											{
												"body": {
													"nativeSrc": "4469:271:2",
													"nodeType": "YulBlock",
													"src": "4469:271:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "4515:83:2",
																"nodeType": "YulBlock",
																"src": "4515:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4517:77:2",
																				"nodeType": "YulIdentifier",
																				"src": "4517:77:2"
																			},
																			"nativeSrc": "4517:79:2",
																			"nodeType": "YulFunctionCall",
																			"src": "4517:79:2"
																		},
																		"nativeSrc": "4517:79:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "4517:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4490:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "4490:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4499:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "4499:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4486:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "4486:3:2"
																		},
																		"nativeSrc": "4486:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "4486:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4511:2:2",
																		"nodeType": "YulLiteral",
																		"src": "4511:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4482:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "4482:3:2"
																},
																"nativeSrc": "4482:32:2",
																"nodeType": "YulFunctionCall",
																"src": "4482:32:2"
															},
															"nativeSrc": "4479:119:2",
															"nodeType": "YulIf",
															"src": "4479:119:2"
														},
														{
															"nativeSrc": "4608:125:2",
															"nodeType": "YulBlock",
															"src": "4608:125:2",
															"statements": [
																{
																	"nativeSrc": "4623:15:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4623:15:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4637:1:2",
																		"nodeType": "YulLiteral",
																		"src": "4637:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4627:6:2",
																			"nodeType": "YulTypedName",
																			"src": "4627:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4652:71:2",
																	"nodeType": "YulAssignment",
																	"src": "4652:71:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4695:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "4695:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4706:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "4706:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4691:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "4691:3:2"
																				},
																				"nativeSrc": "4691:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "4691:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4715:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "4715:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "4662:28:2",
																			"nodeType": "YulIdentifier",
																			"src": "4662:28:2"
																		},
																		"nativeSrc": "4662:61:2",
																		"nodeType": "YulFunctionCall",
																		"src": "4662:61:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4652:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "4652:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "4395:345:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4439:9:2",
														"nodeType": "YulTypedName",
														"src": "4439:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4450:7:2",
														"nodeType": "YulTypedName",
														"src": "4450:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4462:6:2",
														"nodeType": "YulTypedName",
														"src": "4462:6:2",
														"type": ""
													}
												],
												"src": "4395:345:2"
											},
											{
												"body": {
													"nativeSrc": "4900:288:2",
													"nodeType": "YulBlock",
													"src": "4900:288:2",
													"statements": [
														{
															"nativeSrc": "4910:26:2",
															"nodeType": "YulAssignment",
															"src": "4910:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4922:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "4922:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4933:2:2",
																		"nodeType": "YulLiteral",
																		"src": "4933:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4918:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "4918:3:2"
																},
																"nativeSrc": "4918:18:2",
																"nodeType": "YulFunctionCall",
																"src": "4918:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4910:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "4910:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4990:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "4990:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5003:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "5003:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5014:1:2",
																				"nodeType": "YulLiteral",
																				"src": "5014:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4999:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "4999:3:2"
																		},
																		"nativeSrc": "4999:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "4999:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4946:43:2",
																	"nodeType": "YulIdentifier",
																	"src": "4946:43:2"
																},
																"nativeSrc": "4946:71:2",
																"nodeType": "YulFunctionCall",
																"src": "4946:71:2"
															},
															"nativeSrc": "4946:71:2",
															"nodeType": "YulExpressionStatement",
															"src": "4946:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5071:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "5071:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5084:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "5084:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5095:2:2",
																				"nodeType": "YulLiteral",
																				"src": "5095:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5080:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "5080:3:2"
																		},
																		"nativeSrc": "5080:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "5080:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5027:43:2",
																	"nodeType": "YulIdentifier",
																	"src": "5027:43:2"
																},
																"nativeSrc": "5027:72:2",
																"nodeType": "YulFunctionCall",
																"src": "5027:72:2"
															},
															"nativeSrc": "5027:72:2",
															"nodeType": "YulExpressionStatement",
															"src": "5027:72:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "5153:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "5153:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5166:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "5166:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5177:2:2",
																				"nodeType": "YulLiteral",
																				"src": "5177:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5162:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "5162:3:2"
																		},
																		"nativeSrc": "5162:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "5162:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5109:43:2",
																	"nodeType": "YulIdentifier",
																	"src": "5109:43:2"
																},
																"nativeSrc": "5109:72:2",
																"nodeType": "YulFunctionCall",
																"src": "5109:72:2"
															},
															"nativeSrc": "5109:72:2",
															"nodeType": "YulExpressionStatement",
															"src": "5109:72:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "4746:442:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4856:9:2",
														"nodeType": "YulTypedName",
														"src": "4856:9:2",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4868:6:2",
														"nodeType": "YulTypedName",
														"src": "4868:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4876:6:2",
														"nodeType": "YulTypedName",
														"src": "4876:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4884:6:2",
														"nodeType": "YulTypedName",
														"src": "4884:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4895:4:2",
														"nodeType": "YulTypedName",
														"src": "4895:4:2",
														"type": ""
													}
												],
												"src": "4746:442:2"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_6eb4f48b80e4a55d5340ca03867d936f56c8c41ad609d6666c7ca153fd7b0dff(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only the token contract can with\")\n\n        mstore(add(memPtr, 32), \"draw tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_6eb4f48b80e4a55d5340ca03867d936f56c8c41ad609d6666c7ca153fd7b0dff_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_6eb4f48b80e4a55d5340ca03867d936f56c8c41ad609d6666c7ca153fd7b0dff(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6eb4f48b80e4a55d5340ca03867d936f56c8c41ad609d6666c7ca153fd7b0dff__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6eb4f48b80e4a55d5340ca03867d936f56c8c41ad609d6666c7ca153fd7b0dff_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610060575f3560e01c806302d454571461006457806306b091f9146100825780639ab4a4451461009e5780639d76ea58146100bc578063c641b4ce146100da578063fc4751d7146100f6575b5f80fd5b61006c610112565b6040516100799190610545565b60405180910390f35b61009c600480360381019061009791906105bf565b610137565b005b6100a6610244565b6040516100b39190610545565b60405180910390f35b6100c4610269565b6040516100d19190610545565b60405180910390f35b6100f460048036038101906100ef91906105fd565b61028c565b005b610110600480360381019061010b91906105fd565b6103c9565b005b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101bb906106a8565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016101ff9291906106d5565b6020604051808303815f875af115801561021b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061023f9190610731565b505050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016102ea9392919061075c565b6020604051808303815f875af1158015610306573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061032a9190610731565b505f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016103859291906106d5565b6020604051808303815f875af11580156103a1573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103c59190610731565b5050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016104279392919061075c565b6020604051808303815f875af1158015610443573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104679190610731565b505f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016104c29291906106d5565b6020604051808303815f875af11580156104de573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105029190610731565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61052f82610506565b9050919050565b61053f81610525565b82525050565b5f6020820190506105585f830184610536565b92915050565b5f80fd5b61056b81610525565b8114610575575f80fd5b50565b5f8135905061058681610562565b92915050565b5f819050919050565b61059e8161058c565b81146105a8575f80fd5b50565b5f813590506105b981610595565b92915050565b5f80604083850312156105d5576105d461055e565b5b5f6105e285828601610578565b92505060206105f3858286016105ab565b9150509250929050565b5f602082840312156106125761061161055e565b5b5f61061f848285016105ab565b91505092915050565b5f82825260208201905092915050565b7f4f6e6c792074686520746f6b656e20636f6e74726163742063616e20776974685f8201527f6472617720746f6b656e73000000000000000000000000000000000000000000602082015250565b5f610692602b83610628565b915061069d82610638565b604082019050919050565b5f6020820190508181035f8301526106bf81610686565b9050919050565b6106cf8161058c565b82525050565b5f6040820190506106e85f830185610536565b6106f560208301846106c6565b9392505050565b5f8115159050919050565b610710816106fc565b811461071a575f80fd5b50565b5f8151905061072b81610707565b92915050565b5f602082840312156107465761074561055e565b5b5f6107538482850161071d565b91505092915050565b5f60608201905061076f5f830186610536565b61077c6020830185610536565b61078960408301846106c6565b94935050505056fea2646970667358221220aa310408c660aa7453ac512a5ead19732c8dca4b4e5131d005b238e18f7e2b3464736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x60 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2D45457 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x6B091F9 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x9AB4A445 EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0x9D76EA58 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0xC641B4CE EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0xFC4751D7 EQ PUSH2 0xF6 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x6C PUSH2 0x112 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x545 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x5BF JUMP JUMPDEST PUSH2 0x137 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA6 PUSH2 0x244 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x545 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC4 PUSH2 0x269 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x545 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEF SWAP2 SWAP1 PUSH2 0x5FD JUMP JUMPDEST PUSH2 0x28C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x110 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10B SWAP2 SWAP1 PUSH2 0x5FD JUMP JUMPDEST PUSH2 0x3C9 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BB SWAP1 PUSH2 0x6A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FF SWAP3 SWAP2 SWAP1 PUSH2 0x6D5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x21B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x731 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2EA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x75C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x306 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x731 JUMP JUMPDEST POP PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x385 SWAP3 SWAP2 SWAP1 PUSH2 0x6D5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3A1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3C5 SWAP2 SWAP1 PUSH2 0x731 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x427 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x75C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x443 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x467 SWAP2 SWAP1 PUSH2 0x731 JUMP JUMPDEST POP PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C2 SWAP3 SWAP2 SWAP1 PUSH2 0x6D5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4DE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x502 SWAP2 SWAP1 PUSH2 0x731 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x52F DUP3 PUSH2 0x506 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x53F DUP2 PUSH2 0x525 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x558 PUSH0 DUP4 ADD DUP5 PUSH2 0x536 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x56B DUP2 PUSH2 0x525 JUMP JUMPDEST DUP2 EQ PUSH2 0x575 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x586 DUP2 PUSH2 0x562 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x59E DUP2 PUSH2 0x58C JUMP JUMPDEST DUP2 EQ PUSH2 0x5A8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5B9 DUP2 PUSH2 0x595 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5D5 JUMPI PUSH2 0x5D4 PUSH2 0x55E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x5E2 DUP6 DUP3 DUP7 ADD PUSH2 0x578 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x5F3 DUP6 DUP3 DUP7 ADD PUSH2 0x5AB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x612 JUMPI PUSH2 0x611 PUSH2 0x55E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x61F DUP5 DUP3 DUP6 ADD PUSH2 0x5AB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C792074686520746F6B656E20636F6E74726163742063616E2077697468 PUSH0 DUP3 ADD MSTORE PUSH32 0x6472617720746F6B656E73000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x692 PUSH1 0x2B DUP4 PUSH2 0x628 JUMP JUMPDEST SWAP2 POP PUSH2 0x69D DUP3 PUSH2 0x638 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x6BF DUP2 PUSH2 0x686 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6CF DUP2 PUSH2 0x58C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x6E8 PUSH0 DUP4 ADD DUP6 PUSH2 0x536 JUMP JUMPDEST PUSH2 0x6F5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x6C6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x710 DUP2 PUSH2 0x6FC JUMP JUMPDEST DUP2 EQ PUSH2 0x71A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x72B DUP2 PUSH2 0x707 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x746 JUMPI PUSH2 0x745 PUSH2 0x55E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x753 DUP5 DUP3 DUP6 ADD PUSH2 0x71D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x76F PUSH0 DUP4 ADD DUP7 PUSH2 0x536 JUMP JUMPDEST PUSH2 0x77C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x536 JUMP JUMPDEST PUSH2 0x789 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x6C6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA BALANCE DIV ADDMOD 0xC6 PUSH1 0xAA PUSH21 0x53AC512A5EAD19732C8DCA4B4E5131D005B238E18F PUSH31 0x2B3464736F6C63430008180033000000000000000000000000000000000000 ",
							"sourceMap": "120:953:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;213:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;852:218;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;180:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;146:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;654:190;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;456;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;213:26;;;;;;;;;;;;;:::o;852:218::-;949:12;;;;;;;;;;935:26;;:10;:26;;;927:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;1027:5;1020:22;;;1043:10;1055:6;1020:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;852:218;;:::o;180:26::-;;;;;;;;;;;;;:::o;146:27::-;;;;;;;;;;;;:::o;654:190::-;716:11;;;;;;;;;;;709:32;;;742:10;762:4;769:6;709:67;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;794:12;;;;;;;;;;787:29;;;817:10;829:6;787:49;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;654:190;:::o;456:::-;518:11;;;;;;;;;;;511:32;;;544:10;564:4;571:6;511:67;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;596:12;;;;;;;;;;589:29;;;619:10;631:6;589:49;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;456:190;:::o;7:126:2:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;674:117::-;783:1;780;773:12;920:122;993:24;1011:5;993:24;:::i;:::-;986:5;983:35;973:63;;1032:1;1029;1022:12;973:63;920:122;:::o;1048:139::-;1094:5;1132:6;1119:20;1110:29;;1148:33;1175:5;1148:33;:::i;:::-;1048:139;;;;:::o;1193:77::-;1230:7;1259:5;1248:16;;1193:77;;;:::o;1276:122::-;1349:24;1367:5;1349:24;:::i;:::-;1342:5;1339:35;1329:63;;1388:1;1385;1378:12;1329:63;1276:122;:::o;1404:139::-;1450:5;1488:6;1475:20;1466:29;;1504:33;1531:5;1504:33;:::i;:::-;1404:139;;;;:::o;1549:474::-;1617:6;1625;1674:2;1662:9;1653:7;1649:23;1645:32;1642:119;;;1680:79;;:::i;:::-;1642:119;1800:1;1825:53;1870:7;1861:6;1850:9;1846:22;1825:53;:::i;:::-;1815:63;;1771:117;1927:2;1953:53;1998:7;1989:6;1978:9;1974:22;1953:53;:::i;:::-;1943:63;;1898:118;1549:474;;;;;:::o;2029:329::-;2088:6;2137:2;2125:9;2116:7;2112:23;2108:32;2105:119;;;2143:79;;:::i;:::-;2105:119;2263:1;2288:53;2333:7;2324:6;2313:9;2309:22;2288:53;:::i;:::-;2278:63;;2234:117;2029:329;;;;:::o;2364:169::-;2448:11;2482:6;2477:3;2470:19;2522:4;2517:3;2513:14;2498:29;;2364:169;;;;:::o;2539:230::-;2679:34;2675:1;2667:6;2663:14;2656:58;2748:13;2743:2;2735:6;2731:15;2724:38;2539:230;:::o;2775:366::-;2917:3;2938:67;3002:2;2997:3;2938:67;:::i;:::-;2931:74;;3014:93;3103:3;3014:93;:::i;:::-;3132:2;3127:3;3123:12;3116:19;;2775:366;;;:::o;3147:419::-;3313:4;3351:2;3340:9;3336:18;3328:26;;3400:9;3394:4;3390:20;3386:1;3375:9;3371:17;3364:47;3428:131;3554:4;3428:131;:::i;:::-;3420:139;;3147:419;;;:::o;3572:118::-;3659:24;3677:5;3659:24;:::i;:::-;3654:3;3647:37;3572:118;;:::o;3696:332::-;3817:4;3855:2;3844:9;3840:18;3832:26;;3868:71;3936:1;3925:9;3921:17;3912:6;3868:71;:::i;:::-;3949:72;4017:2;4006:9;4002:18;3993:6;3949:72;:::i;:::-;3696:332;;;;;:::o;4034:90::-;4068:7;4111:5;4104:13;4097:21;4086:32;;4034:90;;;:::o;4130:116::-;4200:21;4215:5;4200:21;:::i;:::-;4193:5;4190:32;4180:60;;4236:1;4233;4226:12;4180:60;4130:116;:::o;4252:137::-;4306:5;4337:6;4331:13;4322:22;;4353:30;4377:5;4353:30;:::i;:::-;4252:137;;;;:::o;4395:345::-;4462:6;4511:2;4499:9;4490:7;4486:23;4482:32;4479:119;;;4517:79;;:::i;:::-;4479:119;4637:1;4662:61;4715:7;4706:6;4695:9;4691:22;4662:61;:::i;:::-;4652:71;;4608:125;4395:345;;;;:::o;4746:442::-;4895:4;4933:2;4922:9;4918:18;4910:26;;4946:71;5014:1;5003:9;4999:17;4990:6;4946:71;:::i;:::-;5027:72;5095:2;5084:9;5080:18;5071:6;5027:72;:::i;:::-;5109;5177:2;5166:9;5162:18;5153:6;5109:72;:::i;:::-;4746:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "398200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"tokenAddress()": "2549",
								"tradeUSDC(uint256)": "infinite",
								"tradeUSDT(uint256)": "infinite",
								"usdcAddress()": "2486",
								"usdtAddress()": "2530",
								"withdrawTokens(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 120,
									"end": 1073,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 120,
									"end": 1073,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 120,
									"end": 1073,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 248,
									"end": 448,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 248,
									"end": 448,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 248,
									"end": 448,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 248,
									"end": 448,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 248,
									"end": 448,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 248,
									"end": 448,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 248,
									"end": 448,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 248,
									"end": 448,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 248,
									"end": 448,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 248,
									"end": 448,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 248,
									"end": 448,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 248,
									"end": 448,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 248,
									"end": 448,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 248,
									"end": 448,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 248,
									"end": 448,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 248,
									"end": 448,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 248,
									"end": 448,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 248,
									"end": 448,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 248,
									"end": 448,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 248,
									"end": 448,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 248,
									"end": 448,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 248,
									"end": 448,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 248,
									"end": 448,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 248,
									"end": 448,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 248,
									"end": 448,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 248,
									"end": 448,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 248,
									"end": 448,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 248,
									"end": 448,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 248,
									"end": 448,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 248,
									"end": 448,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 248,
									"end": 448,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 248,
									"end": 448,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 248,
									"end": 448,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 248,
									"end": 448,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 248,
									"end": 448,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 353,
									"end": 366,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 338,
									"end": 350,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 338,
									"end": 350,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 338,
									"end": 366,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 338,
									"end": 366,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 338,
									"end": 366,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 338,
									"end": 366,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 338,
									"end": 366,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 338,
									"end": 366,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 338,
									"end": 366,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 338,
									"end": 366,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 338,
									"end": 366,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 338,
									"end": 366,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 338,
									"end": 366,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 338,
									"end": 366,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 338,
									"end": 366,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 338,
									"end": 366,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 338,
									"end": 366,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 338,
									"end": 366,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 338,
									"end": 366,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 338,
									"end": 366,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 391,
									"end": 403,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 377,
									"end": 388,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 377,
									"end": 388,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 377,
									"end": 403,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 377,
									"end": 403,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 377,
									"end": 403,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 377,
									"end": 403,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 377,
									"end": 403,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 377,
									"end": 403,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 377,
									"end": 403,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 377,
									"end": 403,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 377,
									"end": 403,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 377,
									"end": 403,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 377,
									"end": 403,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 377,
									"end": 403,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 377,
									"end": 403,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 377,
									"end": 403,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 377,
									"end": 403,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 377,
									"end": 403,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 377,
									"end": 403,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 377,
									"end": 403,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 428,
									"end": 440,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 414,
									"end": 425,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 414,
									"end": 425,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 414,
									"end": 440,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 414,
									"end": 440,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 414,
									"end": 440,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 414,
									"end": 440,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 414,
									"end": 440,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 414,
									"end": 440,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 414,
									"end": 440,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 414,
									"end": 440,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 414,
									"end": 440,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 414,
									"end": 440,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 414,
									"end": 440,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 414,
									"end": 440,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 414,
									"end": 440,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 414,
									"end": 440,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 414,
									"end": 440,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 414,
									"end": 440,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 414,
									"end": 440,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 414,
									"end": 440,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 248,
									"end": 448,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 248,
									"end": 448,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 248,
									"end": 448,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 120,
									"end": 1073,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 120,
									"end": 1073,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 933,
									"end": 939,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 941,
									"end": 947,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 949,
									"end": 955,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 998,
									"end": 1000,
									"name": "PUSH",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 986,
									"end": 995,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 977,
									"end": 984,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 973,
									"end": 996,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 969,
									"end": 1001,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1004,
									"end": 1083,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1124,
									"end": 1125,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 1205,
									"end": 1212,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 1196,
									"end": 1202,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1185,
									"end": 1194,
									"name": "DUP8",
									"source": 2
								},
								{
									"begin": 1181,
									"end": 1203,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1149,
									"end": 1213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1139,
									"end": 1213,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 1139,
									"end": 1213,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1095,
									"end": 1223,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1262,
									"end": 1264,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 1344,
									"end": 1351,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 1335,
									"end": 1341,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1324,
									"end": 1333,
									"name": "DUP8",
									"source": 2
								},
								{
									"begin": 1320,
									"end": 1342,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1288,
									"end": 1352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1278,
									"end": 1352,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1278,
									"end": 1352,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1233,
									"end": 1362,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 1403,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 1483,
									"end": 1490,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 1474,
									"end": 1480,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1463,
									"end": 1472,
									"name": "DUP8",
									"source": 2
								},
								{
									"begin": 1459,
									"end": 1481,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1427,
									"end": 1491,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1417,
									"end": 1491,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1417,
									"end": 1491,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1372,
									"end": 1501,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1508,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 120,
									"end": 1073,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 120,
									"end": 1073,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 120,
									"end": 1073,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 120,
									"end": 1073,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 120,
									"end": 1073,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 120,
									"end": 1073,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 1073,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 120,
									"end": 1073,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 1073,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220aa310408c660aa7453ac512a5ead19732c8dca4b4e5131d005b238e18f7e2b3464736f6c63430008180033",
									".code": [
										{
											"begin": 120,
											"end": 1073,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 120,
											"end": 1073,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 120,
											"end": 1073,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 120,
											"end": 1073,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 120,
											"end": 1073,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 120,
											"end": 1073,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 120,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 120,
											"end": 1073,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 120,
											"end": 1073,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 120,
											"end": 1073,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 120,
											"end": 1073,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 120,
											"end": 1073,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 120,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 120,
											"end": 1073,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 120,
											"end": 1073,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 120,
											"end": 1073,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 120,
											"end": 1073,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 120,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 120,
											"end": 1073,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 120,
											"end": 1073,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 120,
											"end": 1073,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 120,
											"end": 1073,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 120,
											"end": 1073,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 120,
											"end": 1073,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 120,
											"end": 1073,
											"name": "PUSH",
											"source": 1,
											"value": "2D45457"
										},
										{
											"begin": 120,
											"end": 1073,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 120,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 120,
											"end": 1073,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 120,
											"end": 1073,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 120,
											"end": 1073,
											"name": "PUSH",
											"source": 1,
											"value": "6B091F9"
										},
										{
											"begin": 120,
											"end": 1073,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 120,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 120,
											"end": 1073,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 120,
											"end": 1073,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 120,
											"end": 1073,
											"name": "PUSH",
											"source": 1,
											"value": "9AB4A445"
										},
										{
											"begin": 120,
											"end": 1073,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 120,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 120,
											"end": 1073,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 120,
											"end": 1073,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 120,
											"end": 1073,
											"name": "PUSH",
											"source": 1,
											"value": "9D76EA58"
										},
										{
											"begin": 120,
											"end": 1073,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 120,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 120,
											"end": 1073,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 120,
											"end": 1073,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 120,
											"end": 1073,
											"name": "PUSH",
											"source": 1,
											"value": "C641B4CE"
										},
										{
											"begin": 120,
											"end": 1073,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 120,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 120,
											"end": 1073,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 120,
											"end": 1073,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 120,
											"end": 1073,
											"name": "PUSH",
											"source": 1,
											"value": "FC4751D7"
										},
										{
											"begin": 120,
											"end": 1073,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 120,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 120,
											"end": 1073,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 120,
											"end": 1073,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 120,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 120,
											"end": 1073,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 120,
											"end": 1073,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 120,
											"end": 1073,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 213,
											"end": 239,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 213,
											"end": 239,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 213,
											"end": 239,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 213,
											"end": 239,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 213,
											"end": 239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 213,
											"end": 239,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 213,
											"end": 239,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 213,
											"end": 239,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 213,
											"end": 239,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 213,
											"end": 239,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 213,
											"end": 239,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 213,
											"end": 239,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 213,
											"end": 239,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 213,
											"end": 239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 213,
											"end": 239,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 213,
											"end": 239,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 213,
											"end": 239,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 213,
											"end": 239,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 213,
											"end": 239,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 213,
											"end": 239,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 213,
											"end": 239,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 213,
											"end": 239,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 213,
											"end": 239,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 852,
											"end": 1070,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 852,
											"end": 1070,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 852,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 852,
											"end": 1070,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 852,
											"end": 1070,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 852,
											"end": 1070,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 852,
											"end": 1070,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 852,
											"end": 1070,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 852,
											"end": 1070,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 852,
											"end": 1070,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 852,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 852,
											"end": 1070,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 852,
											"end": 1070,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 852,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 852,
											"end": 1070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 852,
											"end": 1070,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 852,
											"end": 1070,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 852,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 852,
											"end": 1070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 852,
											"end": 1070,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 852,
											"end": 1070,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 852,
											"end": 1070,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 180,
											"end": 206,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 180,
											"end": 206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 180,
											"end": 206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 180,
											"end": 206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 180,
											"end": 206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 180,
											"end": 206,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 180,
											"end": 206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 180,
											"end": 206,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 180,
											"end": 206,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 180,
											"end": 206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 180,
											"end": 206,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 180,
											"end": 206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 180,
											"end": 206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 180,
											"end": 206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 180,
											"end": 206,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 180,
											"end": 206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 180,
											"end": 206,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 180,
											"end": 206,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 180,
											"end": 206,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 180,
											"end": 206,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 180,
											"end": 206,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 180,
											"end": 206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 180,
											"end": 206,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 146,
											"end": 173,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 146,
											"end": 173,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 146,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 146,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 146,
											"end": 173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 146,
											"end": 173,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 146,
											"end": 173,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 146,
											"end": 173,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 146,
											"end": 173,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 146,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 146,
											"end": 173,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 146,
											"end": 173,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 146,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 146,
											"end": 173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 146,
											"end": 173,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 146,
											"end": 173,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 146,
											"end": 173,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 146,
											"end": 173,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 146,
											"end": 173,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 146,
											"end": 173,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 146,
											"end": 173,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 146,
											"end": 173,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 146,
											"end": 173,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 654,
											"end": 844,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 654,
											"end": 844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 654,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 654,
											"end": 844,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 654,
											"end": 844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 654,
											"end": 844,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 654,
											"end": 844,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 654,
											"end": 844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 654,
											"end": 844,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 654,
											"end": 844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 654,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 654,
											"end": 844,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 654,
											"end": 844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 654,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 654,
											"end": 844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 654,
											"end": 844,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 654,
											"end": 844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 654,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 654,
											"end": 844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 654,
											"end": 844,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 654,
											"end": 844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 654,
											"end": 844,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 456,
											"end": 646,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 456,
											"end": 646,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 456,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 456,
											"end": 646,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 456,
											"end": 646,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 456,
											"end": 646,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 456,
											"end": 646,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 456,
											"end": 646,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 456,
											"end": 646,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 456,
											"end": 646,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 456,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 456,
											"end": 646,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 456,
											"end": 646,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 456,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 456,
											"end": 646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 456,
											"end": 646,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 456,
											"end": 646,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 456,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 456,
											"end": 646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 456,
											"end": 646,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 456,
											"end": 646,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 456,
											"end": 646,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 213,
											"end": 239,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 213,
											"end": 239,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 213,
											"end": 239,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 213,
											"end": 239,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 213,
											"end": 239,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 213,
											"end": 239,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 213,
											"end": 239,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 213,
											"end": 239,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 213,
											"end": 239,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 213,
											"end": 239,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 213,
											"end": 239,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 213,
											"end": 239,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 213,
											"end": 239,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 213,
											"end": 239,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 213,
											"end": 239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 852,
											"end": 1070,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 852,
											"end": 1070,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 949,
											"end": 961,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 961,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 949,
											"end": 961,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 949,
											"end": 961,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 949,
											"end": 961,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 949,
											"end": 961,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 949,
											"end": 961,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 949,
											"end": 961,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 949,
											"end": 961,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 949,
											"end": 961,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 935,
											"end": 961,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 935,
											"end": 961,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 935,
											"end": 945,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 935,
											"end": 961,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 935,
											"end": 961,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 935,
											"end": 961,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 927,
											"end": 1009,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 927,
											"end": 1009,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 927,
											"end": 1009,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 927,
											"end": 1009,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 927,
											"end": 1009,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 927,
											"end": 1009,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 927,
											"end": 1009,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 927,
											"end": 1009,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 927,
											"end": 1009,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 927,
											"end": 1009,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 927,
											"end": 1009,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 927,
											"end": 1009,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 927,
											"end": 1009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 927,
											"end": 1009,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 927,
											"end": 1009,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 927,
											"end": 1009,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 927,
											"end": 1009,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 927,
											"end": 1009,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 927,
											"end": 1009,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 927,
											"end": 1009,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 927,
											"end": 1009,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 927,
											"end": 1009,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 927,
											"end": 1009,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 927,
											"end": 1009,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1027,
											"end": 1032,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1042,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1020,
											"end": 1042,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1042,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 1043,
											"end": 1053,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1055,
											"end": 1061,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1020,
											"end": 1062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1020,
											"end": 1062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 852,
											"end": 1070,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 852,
											"end": 1070,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 852,
											"end": 1070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 180,
											"end": 206,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 180,
											"end": 206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 180,
											"end": 206,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 180,
											"end": 206,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 180,
											"end": 206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 180,
											"end": 206,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 180,
											"end": 206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 180,
											"end": 206,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 180,
											"end": 206,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 180,
											"end": 206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 180,
											"end": 206,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 180,
											"end": 206,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 180,
											"end": 206,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 180,
											"end": 206,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 180,
											"end": 206,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 146,
											"end": 173,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 146,
											"end": 173,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 146,
											"end": 173,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 146,
											"end": 173,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 146,
											"end": 173,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 146,
											"end": 173,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 146,
											"end": 173,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 146,
											"end": 173,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 146,
											"end": 173,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 146,
											"end": 173,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 146,
											"end": 173,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 146,
											"end": 173,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 146,
											"end": 173,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 146,
											"end": 173,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 654,
											"end": 844,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 654,
											"end": 844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 716,
											"end": 727,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 716,
											"end": 727,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 716,
											"end": 727,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 716,
											"end": 727,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 716,
											"end": 727,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 716,
											"end": 727,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 716,
											"end": 727,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 716,
											"end": 727,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 716,
											"end": 727,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 716,
											"end": 727,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 716,
											"end": 727,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 709,
											"end": 741,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 709,
											"end": 741,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 709,
											"end": 741,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 742,
											"end": 752,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 762,
											"end": 766,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 769,
											"end": 775,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 709,
											"end": 776,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 709,
											"end": 776,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 709,
											"end": 776,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 709,
											"end": 776,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 709,
											"end": 776,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 709,
											"end": 776,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 709,
											"end": 776,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 709,
											"end": 776,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 709,
											"end": 776,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 709,
											"end": 776,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 709,
											"end": 776,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 709,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 709,
											"end": 776,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 709,
											"end": 776,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 709,
											"end": 776,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 709,
											"end": 776,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 709,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 709,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 709,
											"end": 776,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 709,
											"end": 776,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 709,
											"end": 776,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 709,
											"end": 776,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 709,
											"end": 776,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 709,
											"end": 776,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 709,
											"end": 776,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 709,
											"end": 776,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 709,
											"end": 776,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 709,
											"end": 776,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 709,
											"end": 776,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 709,
											"end": 776,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 709,
											"end": 776,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 709,
											"end": 776,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 709,
											"end": 776,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 709,
											"end": 776,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 709,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 709,
											"end": 776,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 709,
											"end": 776,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 709,
											"end": 776,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 709,
											"end": 776,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 709,
											"end": 776,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 709,
											"end": 776,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 709,
											"end": 776,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 709,
											"end": 776,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 709,
											"end": 776,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 709,
											"end": 776,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 709,
											"end": 776,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 709,
											"end": 776,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 709,
											"end": 776,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 709,
											"end": 776,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 709,
											"end": 776,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 709,
											"end": 776,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 709,
											"end": 776,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 709,
											"end": 776,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 709,
											"end": 776,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 709,
											"end": 776,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 709,
											"end": 776,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 709,
											"end": 776,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 709,
											"end": 776,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 709,
											"end": 776,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 709,
											"end": 776,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 709,
											"end": 776,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 709,
											"end": 776,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 709,
											"end": 776,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 709,
											"end": 776,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 709,
											"end": 776,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 709,
											"end": 776,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 709,
											"end": 776,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 709,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 709,
											"end": 776,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 709,
											"end": 776,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 709,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 709,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 709,
											"end": 776,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 709,
											"end": 776,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 709,
											"end": 776,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 794,
											"end": 806,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 794,
											"end": 806,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 794,
											"end": 806,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 794,
											"end": 806,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 794,
											"end": 806,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 794,
											"end": 806,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 794,
											"end": 806,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 794,
											"end": 806,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 794,
											"end": 806,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 794,
											"end": 806,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 787,
											"end": 816,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 787,
											"end": 816,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 787,
											"end": 816,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 817,
											"end": 827,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 829,
											"end": 835,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 787,
											"end": 836,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 787,
											"end": 836,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 787,
											"end": 836,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 787,
											"end": 836,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 787,
											"end": 836,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 787,
											"end": 836,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 787,
											"end": 836,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 787,
											"end": 836,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 787,
											"end": 836,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 787,
											"end": 836,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 787,
											"end": 836,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 787,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 787,
											"end": 836,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 787,
											"end": 836,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 787,
											"end": 836,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 787,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 787,
											"end": 836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 787,
											"end": 836,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 787,
											"end": 836,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 787,
											"end": 836,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 787,
											"end": 836,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 787,
											"end": 836,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 787,
											"end": 836,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 787,
											"end": 836,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 787,
											"end": 836,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 787,
											"end": 836,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 787,
											"end": 836,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 787,
											"end": 836,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 787,
											"end": 836,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 787,
											"end": 836,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 787,
											"end": 836,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 787,
											"end": 836,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 787,
											"end": 836,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 787,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 787,
											"end": 836,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 787,
											"end": 836,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 787,
											"end": 836,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 787,
											"end": 836,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 787,
											"end": 836,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 787,
											"end": 836,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 787,
											"end": 836,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 787,
											"end": 836,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 787,
											"end": 836,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 787,
											"end": 836,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 787,
											"end": 836,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 787,
											"end": 836,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 787,
											"end": 836,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 787,
											"end": 836,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 787,
											"end": 836,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 787,
											"end": 836,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 787,
											"end": 836,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 787,
											"end": 836,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 787,
											"end": 836,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 787,
											"end": 836,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 787,
											"end": 836,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 787,
											"end": 836,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 787,
											"end": 836,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 787,
											"end": 836,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 787,
											"end": 836,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 787,
											"end": 836,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 787,
											"end": 836,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 787,
											"end": 836,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 787,
											"end": 836,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 787,
											"end": 836,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 787,
											"end": 836,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 787,
											"end": 836,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 787,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 787,
											"end": 836,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 787,
											"end": 836,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 787,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 787,
											"end": 836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 787,
											"end": 836,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 787,
											"end": 836,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 787,
											"end": 836,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 654,
											"end": 844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 654,
											"end": 844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 456,
											"end": 646,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 456,
											"end": 646,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 518,
											"end": 529,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 518,
											"end": 529,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 518,
											"end": 529,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 518,
											"end": 529,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 518,
											"end": 529,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 518,
											"end": 529,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 518,
											"end": 529,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 518,
											"end": 529,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 518,
											"end": 529,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 518,
											"end": 529,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 518,
											"end": 529,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 511,
											"end": 543,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 511,
											"end": 543,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 511,
											"end": 543,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 544,
											"end": 554,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 564,
											"end": 568,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 571,
											"end": 577,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 511,
											"end": 578,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 578,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 511,
											"end": 578,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 511,
											"end": 578,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 511,
											"end": 578,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 511,
											"end": 578,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 511,
											"end": 578,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 511,
											"end": 578,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 511,
											"end": 578,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 511,
											"end": 578,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 511,
											"end": 578,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 511,
											"end": 578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 511,
											"end": 578,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 511,
											"end": 578,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 511,
											"end": 578,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 511,
											"end": 578,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 511,
											"end": 578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 511,
											"end": 578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 511,
											"end": 578,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 511,
											"end": 578,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 511,
											"end": 578,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 511,
											"end": 578,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 578,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 511,
											"end": 578,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 511,
											"end": 578,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 511,
											"end": 578,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 511,
											"end": 578,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 511,
											"end": 578,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 511,
											"end": 578,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 511,
											"end": 578,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 511,
											"end": 578,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 511,
											"end": 578,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 511,
											"end": 578,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 511,
											"end": 578,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 511,
											"end": 578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 511,
											"end": 578,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 511,
											"end": 578,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 511,
											"end": 578,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 511,
											"end": 578,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 511,
											"end": 578,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 511,
											"end": 578,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 511,
											"end": 578,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 511,
											"end": 578,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 511,
											"end": 578,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 511,
											"end": 578,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 511,
											"end": 578,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 511,
											"end": 578,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 511,
											"end": 578,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 511,
											"end": 578,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 511,
											"end": 578,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 578,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 511,
											"end": 578,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 511,
											"end": 578,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 511,
											"end": 578,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 511,
											"end": 578,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 511,
											"end": 578,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 511,
											"end": 578,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 511,
											"end": 578,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 511,
											"end": 578,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 511,
											"end": 578,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 511,
											"end": 578,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 511,
											"end": 578,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 578,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 511,
											"end": 578,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 511,
											"end": 578,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 511,
											"end": 578,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 511,
											"end": 578,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 511,
											"end": 578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 511,
											"end": 578,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 511,
											"end": 578,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 511,
											"end": 578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 511,
											"end": 578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 511,
											"end": 578,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 511,
											"end": 578,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 511,
											"end": 578,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 596,
											"end": 608,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 608,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 596,
											"end": 608,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 596,
											"end": 608,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 596,
											"end": 608,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 596,
											"end": 608,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 596,
											"end": 608,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 596,
											"end": 608,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 596,
											"end": 608,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 596,
											"end": 608,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 589,
											"end": 618,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 589,
											"end": 618,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 589,
											"end": 618,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 619,
											"end": 629,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 631,
											"end": 637,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 589,
											"end": 638,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 589,
											"end": 638,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 589,
											"end": 638,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 589,
											"end": 638,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 589,
											"end": 638,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 589,
											"end": 638,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 589,
											"end": 638,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 589,
											"end": 638,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 589,
											"end": 638,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 589,
											"end": 638,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 589,
											"end": 638,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 589,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 589,
											"end": 638,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 589,
											"end": 638,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 589,
											"end": 638,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 589,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 589,
											"end": 638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 589,
											"end": 638,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 589,
											"end": 638,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 589,
											"end": 638,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 589,
											"end": 638,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 589,
											"end": 638,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 589,
											"end": 638,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 589,
											"end": 638,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 589,
											"end": 638,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 589,
											"end": 638,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 589,
											"end": 638,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 638,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 589,
											"end": 638,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 589,
											"end": 638,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 589,
											"end": 638,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 589,
											"end": 638,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 589,
											"end": 638,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 589,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 589,
											"end": 638,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 589,
											"end": 638,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 589,
											"end": 638,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 638,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 589,
											"end": 638,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 589,
											"end": 638,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 589,
											"end": 638,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 638,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 589,
											"end": 638,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 589,
											"end": 638,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 589,
											"end": 638,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 589,
											"end": 638,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 589,
											"end": 638,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 589,
											"end": 638,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 589,
											"end": 638,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 589,
											"end": 638,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 589,
											"end": 638,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 589,
											"end": 638,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 589,
											"end": 638,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 589,
											"end": 638,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 589,
											"end": 638,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 589,
											"end": 638,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 589,
											"end": 638,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 589,
											"end": 638,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 589,
											"end": 638,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 589,
											"end": 638,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 589,
											"end": 638,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 589,
											"end": 638,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 589,
											"end": 638,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 589,
											"end": 638,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 589,
											"end": 638,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 589,
											"end": 638,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 589,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 589,
											"end": 638,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 589,
											"end": 638,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 589,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 589,
											"end": 638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 589,
											"end": 638,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 589,
											"end": 638,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 589,
											"end": 638,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 456,
											"end": 646,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 456,
											"end": 646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 674,
											"end": 791,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 674,
											"end": 791,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 783,
											"end": 784,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 781,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 773,
											"end": 785,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1011,
											"end": 1016,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 993,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 986,
											"end": 991,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 983,
											"end": 1018,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1032,
											"end": 1033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1029,
											"end": 1030,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1022,
											"end": 1034,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 920,
											"end": 1042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1132,
											"end": 1138,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1119,
											"end": 1139,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1175,
											"end": 1180,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1148,
											"end": 1181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1193,
											"end": 1270,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1193,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1230,
											"end": 1237,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1259,
											"end": 1264,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1264,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1264,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1193,
											"end": 1270,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1193,
											"end": 1270,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1193,
											"end": 1270,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1193,
											"end": 1270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1276,
											"end": 1398,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1276,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1349,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1367,
											"end": 1372,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1349,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1349,
											"end": 1373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1349,
											"end": 1373,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1349,
											"end": 1373,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1347,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1374,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1329,
											"end": 1392,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1388,
											"end": 1389,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1385,
											"end": 1386,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1390,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1392,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1329,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1276,
											"end": 1398,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1276,
											"end": 1398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1450,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1488,
											"end": 1494,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1495,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1466,
											"end": 1495,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1466,
											"end": 1495,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1531,
											"end": 1536,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1504,
											"end": 1537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1617,
											"end": 1623,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1625,
											"end": 1631,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1674,
											"end": 1676,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1662,
											"end": 1671,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1653,
											"end": 1660,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1649,
											"end": 1672,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1645,
											"end": 1677,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1642,
											"end": 1761,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1642,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1642,
											"end": 1761,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1680,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1680,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1680,
											"end": 1759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1680,
											"end": 1759,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1680,
											"end": 1759,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1642,
											"end": 1761,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1642,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1800,
											"end": 1801,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1825,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 1870,
											"end": 1877,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1859,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1868,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1825,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1825,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1825,
											"end": 1878,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 1825,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1815,
											"end": 1878,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1815,
											"end": 1878,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1771,
											"end": 1888,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1927,
											"end": 1929,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1953,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 1998,
											"end": 2005,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1989,
											"end": 1995,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1978,
											"end": 1987,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 1996,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1953,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1953,
											"end": 2006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1953,
											"end": 2006,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 1953,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 2006,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 2006,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1898,
											"end": 2016,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 2023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2088,
											"end": 2094,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2137,
											"end": 2139,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2125,
											"end": 2134,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2123,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2112,
											"end": 2135,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2108,
											"end": 2140,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2143,
											"end": 2222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2263,
											"end": 2264,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2333,
											"end": 2340,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2324,
											"end": 2330,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2313,
											"end": 2322,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2331,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2288,
											"end": 2341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2351,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2364,
											"end": 2533,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2364,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2448,
											"end": 2459,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2482,
											"end": 2488,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2477,
											"end": 2480,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2526,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2517,
											"end": 2520,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2513,
											"end": 2527,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2498,
											"end": 2527,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2498,
											"end": 2527,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2364,
											"end": 2533,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2364,
											"end": 2533,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2364,
											"end": 2533,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2364,
											"end": 2533,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2364,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2539,
											"end": 2769,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2539,
											"end": 2769,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2679,
											"end": 2713,
											"name": "PUSH",
											"source": 2,
											"value": "4F6E6C792074686520746F6B656E20636F6E74726163742063616E2077697468"
										},
										{
											"begin": 2675,
											"end": 2676,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2667,
											"end": 2673,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2663,
											"end": 2677,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2656,
											"end": 2714,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2748,
											"end": 2761,
											"name": "PUSH",
											"source": 2,
											"value": "6472617720746F6B656E73000000000000000000000000000000000000000000"
										},
										{
											"begin": 2743,
											"end": 2745,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2735,
											"end": 2741,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2731,
											"end": 2746,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2724,
											"end": 2762,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2539,
											"end": 2769,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2539,
											"end": 2769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2775,
											"end": 3141,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2775,
											"end": 3141,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2917,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2938,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3002,
											"end": 3004,
											"name": "PUSH",
											"source": 2,
											"value": "2B"
										},
										{
											"begin": 2997,
											"end": 3000,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2938,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2938,
											"end": 3005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2938,
											"end": 3005,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2938,
											"end": 3005,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2931,
											"end": 3005,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2931,
											"end": 3005,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 3103,
											"end": 3106,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3014,
											"end": 3107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3107,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 3014,
											"end": 3107,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3134,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3127,
											"end": 3130,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3123,
											"end": 3135,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3116,
											"end": 3135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3116,
											"end": 3135,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2775,
											"end": 3141,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2775,
											"end": 3141,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2775,
											"end": 3141,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2775,
											"end": 3141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3147,
											"end": 3566,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3147,
											"end": 3566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3313,
											"end": 3317,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3351,
											"end": 3353,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3340,
											"end": 3349,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3336,
											"end": 3354,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3328,
											"end": 3354,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3328,
											"end": 3354,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3409,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3394,
											"end": 3398,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3410,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3386,
											"end": 3387,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3375,
											"end": 3384,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3371,
											"end": 3388,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3364,
											"end": 3411,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3428,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 3554,
											"end": 3558,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3428,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3428,
											"end": 3559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3428,
											"end": 3559,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 3428,
											"end": 3559,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3420,
											"end": 3559,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3420,
											"end": 3559,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3147,
											"end": 3566,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3147,
											"end": 3566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3147,
											"end": 3566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3147,
											"end": 3566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3572,
											"end": 3690,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3572,
											"end": 3690,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3659,
											"end": 3683,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 3677,
											"end": 3682,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3659,
											"end": 3683,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3659,
											"end": 3683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3659,
											"end": 3683,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 3659,
											"end": 3683,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3654,
											"end": 3657,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3647,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3572,
											"end": 3690,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3572,
											"end": 3690,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3572,
											"end": 3690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3696,
											"end": 4028,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3696,
											"end": 4028,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3817,
											"end": 3821,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3855,
											"end": 3857,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3844,
											"end": 3853,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3840,
											"end": 3858,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3832,
											"end": 3858,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3832,
											"end": 3858,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3868,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 3936,
											"end": 3937,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3925,
											"end": 3934,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3921,
											"end": 3938,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3912,
											"end": 3918,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3868,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3868,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3868,
											"end": 3939,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 3868,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3949,
											"end": 4021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 4017,
											"end": 4019,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4006,
											"end": 4015,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4002,
											"end": 4020,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3993,
											"end": 3999,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3949,
											"end": 4021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3949,
											"end": 4021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3949,
											"end": 4021,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 3949,
											"end": 4021,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3696,
											"end": 4028,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3696,
											"end": 4028,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3696,
											"end": 4028,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3696,
											"end": 4028,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3696,
											"end": 4028,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3696,
											"end": 4028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4034,
											"end": 4124,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 4034,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4068,
											"end": 4075,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4111,
											"end": 4116,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4104,
											"end": 4117,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4097,
											"end": 4118,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4086,
											"end": 4118,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4086,
											"end": 4118,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4034,
											"end": 4124,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4034,
											"end": 4124,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4034,
											"end": 4124,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4034,
											"end": 4124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4130,
											"end": 4246,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 4130,
											"end": 4246,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4200,
											"end": 4221,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 4215,
											"end": 4220,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4200,
											"end": 4221,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 4200,
											"end": 4221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4200,
											"end": 4221,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 4200,
											"end": 4221,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4193,
											"end": 4198,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4190,
											"end": 4222,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4180,
											"end": 4240,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 4180,
											"end": 4240,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4236,
											"end": 4237,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4233,
											"end": 4234,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4226,
											"end": 4238,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4180,
											"end": 4240,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 4180,
											"end": 4240,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4130,
											"end": 4246,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4130,
											"end": 4246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4252,
											"end": 4389,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 4252,
											"end": 4389,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4306,
											"end": 4311,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4337,
											"end": 4343,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4331,
											"end": 4344,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4344,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4344,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4353,
											"end": 4383,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 4377,
											"end": 4382,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4353,
											"end": 4383,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 4353,
											"end": 4383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4353,
											"end": 4383,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 4353,
											"end": 4383,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4252,
											"end": 4389,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4252,
											"end": 4389,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4252,
											"end": 4389,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4252,
											"end": 4389,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4252,
											"end": 4389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4395,
											"end": 4740,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4395,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4462,
											"end": 4468,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4511,
											"end": 4513,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4499,
											"end": 4508,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4490,
											"end": 4497,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4486,
											"end": 4509,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4482,
											"end": 4514,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 4479,
											"end": 4598,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4479,
											"end": 4598,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 4479,
											"end": 4598,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4517,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 4517,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 4517,
											"end": 4596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4517,
											"end": 4596,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 4517,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4479,
											"end": 4598,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 4479,
											"end": 4598,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4637,
											"end": 4638,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4662,
											"end": 4723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 4715,
											"end": 4722,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4695,
											"end": 4704,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4691,
											"end": 4713,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4662,
											"end": 4723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 4662,
											"end": 4723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4662,
											"end": 4723,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 4662,
											"end": 4723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4652,
											"end": 4723,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4652,
											"end": 4723,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4733,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4395,
											"end": 4740,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4395,
											"end": 4740,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4395,
											"end": 4740,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4395,
											"end": 4740,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4395,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 5188,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 4746,
											"end": 5188,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4895,
											"end": 4899,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4933,
											"end": 4935,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4922,
											"end": 4931,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4918,
											"end": 4936,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4910,
											"end": 4936,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4910,
											"end": 4936,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4946,
											"end": 5017,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 5014,
											"end": 5015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5003,
											"end": 5012,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4999,
											"end": 5016,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4990,
											"end": 4996,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4946,
											"end": 5017,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 4946,
											"end": 5017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4946,
											"end": 5017,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 4946,
											"end": 5017,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5027,
											"end": 5099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 5095,
											"end": 5097,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5084,
											"end": 5093,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5080,
											"end": 5098,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5071,
											"end": 5077,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5027,
											"end": 5099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 5027,
											"end": 5099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5027,
											"end": 5099,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 5027,
											"end": 5099,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5109,
											"end": 5181,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 5177,
											"end": 5179,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5166,
											"end": 5175,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5162,
											"end": 5180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5153,
											"end": 5159,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5109,
											"end": 5181,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 5109,
											"end": 5181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5109,
											"end": 5181,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 5109,
											"end": 5181,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 5188,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 5188,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 5188,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 5188,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 5188,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 5188,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 5188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"contracts/SimpleDex.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"tokenAddress()": "9d76ea58",
							"tradeUSDC(uint256)": "c641b4ce",
							"tradeUSDT(uint256)": "fc4751d7",
							"usdcAddress()": "02d45457",
							"usdtAddress()": "9ab4a445",
							"withdrawTokens(address,uint256)": "06b091f9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdtAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdcAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"tradeUSDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"tradeUSDT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdcAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdtAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SimpleDex.sol\":\"SimpleDEX\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"contracts/SimpleDex.sol\":{\"keccak256\":\"0x21894826df9b4deccb3d3bd508a215b5d890600e0b2789b036eab183a30816e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11deee6d9219c18d08b4284fa5e350e52e1b9108d4e81cd72fdb997285e5c0ab\",\"dweb:/ipfs/QmSTpnMLFwmNsd5tmsBAs53oHMJgZUXBVKK6kbJqHiGozr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 82,
								"contract": "contracts/SimpleDex.sol:SimpleDEX",
								"label": "tokenAddress",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 84,
								"contract": "contracts/SimpleDex.sol:SimpleDEX",
								"label": "usdtAddress",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 86,
								"contract": "contracts/SimpleDex.sol:SimpleDEX",
								"label": "usdcAddress",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "213:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "395:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "404:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "426:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "446:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:0"
									},
									"src": "389:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "626:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "635:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "658:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "683:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:0"
									},
									"src": "620:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "930:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "970:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:0"
									},
									"scope": 77,
									"src": "911:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1221:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1233:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1266:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:0"
									},
									"scope": 77,
									"src": "1203:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1566:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1581:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1621:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:0"
									},
									"scope": 77,
									"src": "1547:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2325:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2375:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:0"
									},
									"scope": 77,
									"src": "2308:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2711:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2725:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2737:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2770:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:0"
									},
									"scope": 77,
									"src": "2689:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "203:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "106:2673:0"
				},
				"id": 0
			},
			"contracts/SimpleDex.sol": {
				"ast": {
					"absolutePath": "contracts/SimpleDex.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"SimpleDEX": [
							190
						]
					},
					"id": 191,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 191,
							"sourceUnit": 78,
							"src": "60:56:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SimpleDEX",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 190,
							"linearizedBaseContracts": [
								190
							],
							"name": "SimpleDEX",
							"nameLocation": "129:9:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "9d76ea58",
									"id": 82,
									"mutability": "mutable",
									"name": "tokenAddress",
									"nameLocation": "161:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 190,
									"src": "146:27:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 81,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "146:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9ab4a445",
									"id": 84,
									"mutability": "mutable",
									"name": "usdtAddress",
									"nameLocation": "195:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 190,
									"src": "180:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 83,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "180:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "02d45457",
									"id": 86,
									"mutability": "mutable",
									"name": "usdcAddress",
									"nameLocation": "228:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 190,
									"src": "213:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 85,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "213:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "327:121:1",
										"statements": [
											{
												"expression": {
													"id": 97,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 95,
														"name": "tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 82,
														"src": "338:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 96,
														"name": "_tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 88,
														"src": "353:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "338:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 98,
												"nodeType": "ExpressionStatement",
												"src": "338:28:1"
											},
											{
												"expression": {
													"id": 101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 99,
														"name": "usdtAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "377:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 100,
														"name": "_usdtAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "391:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "377:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 102,
												"nodeType": "ExpressionStatement",
												"src": "377:26:1"
											},
											{
												"expression": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 103,
														"name": "usdcAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "414:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 104,
														"name": "_usdcAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 92,
														"src": "428:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "414:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 106,
												"nodeType": "ExpressionStatement",
												"src": "414:26:1"
											}
										]
									},
									"id": 108,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "268:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "260:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 87,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "260:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "_usdtAddress",
												"nameLocation": "291:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "283:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "283:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "_usdcAddress",
												"nameLocation": "313:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "305:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 91,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "305:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "259:67:1"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "327:0:1"
									},
									"scope": 190,
									"src": "248:200:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "500:146:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 117,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "544:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "548:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "544:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 121,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "564:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SimpleDEX_$190",
																		"typeString": "contract SimpleDEX"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SimpleDEX_$190",
																		"typeString": "contract SimpleDEX"
																	}
																],
																"id": 120,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "556:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 119,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "556:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "556:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 123,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "571:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 114,
																	"name": "usdtAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 84,
																	"src": "518:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 113,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "511:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "511:19:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 116,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "531:12:1",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 76,
														"src": "511:32:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "511:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 125,
												"nodeType": "ExpressionStatement",
												"src": "511:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 130,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "619:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "623:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "619:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 132,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "631:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 127,
																	"name": "tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 82,
																	"src": "596:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 126,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "589:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "589:20:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 129,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "610:8:1",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "589:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "589:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "589:49:1"
											}
										]
									},
									"functionSelector": "fc4751d7",
									"id": 136,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tradeUSDT",
									"nameLocation": "465:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "483:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "475:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:1"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "500:0:1"
									},
									"scope": 190,
									"src": "456:190:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "698:146:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 145,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "742:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "746:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "742:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 149,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "762:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SimpleDEX_$190",
																		"typeString": "contract SimpleDEX"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SimpleDEX_$190",
																		"typeString": "contract SimpleDEX"
																	}
																],
																"id": 148,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "754:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 147,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "754:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "754:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 151,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 138,
															"src": "769:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 142,
																	"name": "usdcAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 86,
																	"src": "716:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 141,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "709:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "709:19:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 144,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "729:12:1",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 76,
														"src": "709:32:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "709:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 153,
												"nodeType": "ExpressionStatement",
												"src": "709:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 158,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "817:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "821:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "817:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 160,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 138,
															"src": "829:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 155,
																	"name": "tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 82,
																	"src": "794:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 154,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "787:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "787:20:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 157,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "808:8:1",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "787:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "787:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "787:49:1"
											}
										]
									},
									"functionSelector": "c641b4ce",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tradeUSDC",
									"nameLocation": "663:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "681:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "673:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "673:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:16:1"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "698:0:1"
									},
									"scope": 190,
									"src": "654:190:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "916:154:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 172,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "935:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "939:6:1",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "935:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 174,
																"name": "tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 82,
																"src": "949:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "935:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c792074686520746f6b656e20636f6e74726163742063616e20776974686472617720746f6b656e73",
															"id": 176,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "963:45:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6eb4f48b80e4a55d5340ca03867d936f56c8c41ad609d6666c7ca153fd7b0dff",
																"typeString": "literal_string \"Only the token contract can withdraw tokens\""
															},
															"value": "Only the token contract can withdraw tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6eb4f48b80e4a55d5340ca03867d936f56c8c41ad609d6666c7ca153fd7b0dff",
																"typeString": "literal_string \"Only the token contract can withdraw tokens\""
															}
														],
														"id": 171,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "927:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "927:82:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 178,
												"nodeType": "ExpressionStatement",
												"src": "927:82:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 183,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1043:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1047:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1043:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 185,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 168,
															"src": "1055:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 180,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 166,
																	"src": "1027:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 179,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "1020:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1020:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 182,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1034:8:1",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "1020:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1020:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "1020:42:1"
											}
										]
									},
									"functionSelector": "06b091f9",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawTokens",
									"nameLocation": "861:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "884:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "876:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "876:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "875:31:1"
									},
									"returnParameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "916:0:1"
									},
									"scope": 190,
									"src": "852:218:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 191,
							"src": "120:953:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:1042:1"
				},
				"id": 1
			}
		}
	}
}